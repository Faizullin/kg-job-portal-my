# Generated by Django 5.0.2 on 2025-08-26 13:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.CharField(max_length=20, unique=True, verbose_name='Version')),
                ('build_number', models.PositiveIntegerField(unique=True, verbose_name='Build Number')),
                ('release_notes', models.TextField(blank=True, verbose_name='Release Notes')),
                ('is_forced_update', models.BooleanField(default=False, verbose_name='Forced Update')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('release_date', models.DateTimeField(auto_now_add=True, verbose_name='Release Date')),
                ('platform', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('web', 'Web'), ('all', 'All Platforms')], default='all', max_length=20, verbose_name='Platform')),
                ('download_url', models.URLField(blank=True, verbose_name='Download URL')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='File Size (bytes)')),
                ('checksum', models.CharField(blank=True, max_length=64, verbose_name='Checksum')),
                ('min_os_version', models.CharField(blank=True, max_length=20, verbose_name='Minimum OS Version')),
                ('max_os_version', models.CharField(blank=True, max_length=20, verbose_name='Maximum OS Version')),
                ('device_requirements', models.JSONField(default=dict, verbose_name='Device Requirements')),
            ],
            options={
                'verbose_name': 'App Version',
                'verbose_name_plural': 'App Versions',
                'ordering': ['-build_number'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('code', models.CharField(max_length=5, unique=True, verbose_name='Language Code')),
                ('name', models.CharField(max_length=50, verbose_name='Language Name')),
                ('native_name', models.CharField(max_length=50, verbose_name='Native Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_default', models.BooleanField(default=False, verbose_name='Default Language')),
                ('flag_icon', models.CharField(blank=True, max_length=50, verbose_name='Flag Icon')),
                ('rtl_support', models.BooleanField(default=False, verbose_name='RTL Support')),
                ('locale_code', models.CharField(blank=True, max_length=10, verbose_name='Locale Code')),
                ('currency_code', models.CharField(blank=True, max_length=3, verbose_name='Currency Code')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceAddon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('name', models.CharField(max_length=100, verbose_name='Addon Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('image', models.URLField(blank=True, verbose_name='Image')),
                ('featured', models.BooleanField(default=False, verbose_name='Featured Addon')),
                ('duration_addition', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration Addition (hours)')),
                ('max_quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum Quantity')),
                ('min_quantity', models.PositiveIntegerField(default=1, verbose_name='Minimum Quantity')),
                ('price_type', models.CharField(choices=[('fixed', 'Fixed Price'), ('percentage', 'Percentage of Base Price'), ('per_unit', 'Per Unit'), ('per_hour', 'Per Hour')], default='fixed', max_length=20, verbose_name='Price Type')),
                ('requires_approval', models.BooleanField(default=False, verbose_name='Requires Approval')),
                ('prerequisites', models.JSONField(default=list, verbose_name='Prerequisites')),
            ],
            options={
                'verbose_name': 'Service Addon',
                'verbose_name_plural': 'Service Addons',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon')),
                ('color', models.CharField(default='#6366f1', max_length=7, verbose_name='Color')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort Order')),
                ('banner_image', models.URLField(blank=True, verbose_name='Banner Image')),
                ('featured', models.BooleanField(default=False, verbose_name='Featured Category')),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Commission Rate (%)')),
                ('min_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Minimum Price')),
                ('max_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maximum Price')),
                ('estimated_duration_min', models.PositiveIntegerField(blank=True, null=True, verbose_name='Min Duration (hours)')),
                ('estimated_duration_max', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max Duration (hours)')),
                ('meta_title', models.CharField(blank=True, max_length=60, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, verbose_name='Meta Description')),
                ('keywords', models.TextField(blank=True, verbose_name='Keywords')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Slug')),
                ('requires_license', models.BooleanField(default=False, verbose_name='Requires License')),
                ('requires_insurance', models.BooleanField(default=False, verbose_name='Requires Insurance')),
                ('requires_background_check', models.BooleanField(default=False, verbose_name='Requires Background Check')),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Setting Key')),
                ('value', models.TextField(verbose_name='Setting Value')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_public', models.BooleanField(default=False, verbose_name='Public Setting')),
                ('setting_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('boolean', 'Boolean'), ('json', 'JSON'), ('file', 'File')], default='string', max_length=20, verbose_name='Setting Type')),
                ('validation_regex', models.CharField(blank=True, max_length=200, verbose_name='Validation Regex')),
                ('min_value', models.CharField(blank=True, max_length=50, verbose_name='Minimum Value')),
                ('max_value', models.CharField(blank=True, max_length=50, verbose_name='Maximum Value')),
                ('requires_admin', models.BooleanField(default=False, verbose_name='Requires Admin')),
                ('category', models.CharField(default='general', max_length=50, verbose_name='Category')),
            ],
            options={
                'verbose_name': 'System Setting',
                'verbose_name_plural': 'System Settings',
                'ordering': ['category', 'key'],
            },
        ),
        migrations.CreateModel(
            name='ServiceSubcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('name', models.CharField(max_length=100, verbose_name='Subcategory Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort Order')),
                ('image', models.URLField(blank=True, verbose_name='Image')),
                ('featured', models.BooleanField(default=False, verbose_name='Featured Subcategory')),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Base Price')),
                ('price_range_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price Range Min')),
                ('price_range_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price Range Max')),
                ('estimated_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Estimated Duration (hours)')),
                ('complexity_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='intermediate', max_length=20, verbose_name='Complexity Level')),
                ('required_tools', models.JSONField(default=list, verbose_name='Required Tools')),
                ('required_materials', models.JSONField(default=list, verbose_name='Required Materials')),
                ('safety_requirements', models.TextField(blank=True, verbose_name='Safety Requirements')),
                ('slug', models.SlugField(blank=True, max_length=100, verbose_name='Slug')),
                ('meta_title', models.CharField(blank=True, max_length=60, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, verbose_name='Meta Description')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='core.servicecategory')),
            ],
            options={
                'verbose_name': 'Service Subcategory',
                'verbose_name_plural': 'Service Subcategories',
                'ordering': ['sort_order', 'name'],
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ServicePackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('name', models.CharField(max_length=100, verbose_name='Package Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('package_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Package Price')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Discount Percentage')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Popular Package')),
                ('is_best_value', models.BooleanField(default=False, verbose_name='Best Value')),
                ('estimated_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Estimated Duration (hours)')),
                ('valid_from', models.DateField(blank=True, null=True, verbose_name='Valid From')),
                ('valid_until', models.DateField(blank=True, null=True, verbose_name='Valid Until')),
                ('addons', models.ManyToManyField(related_name='packages', to='core.serviceaddon')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packages', to='core.servicesubcategory')),
            ],
            options={
                'verbose_name': 'Service Package',
                'verbose_name_plural': 'Service Packages',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='serviceaddon',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addons', to='core.servicesubcategory'),
        ),
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('name', models.CharField(max_length=100, verbose_name='Area Name')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=100, verbose_name='State/Province')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('postal_codes', models.JSONField(default=list, verbose_name='Postal Codes')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('base_price_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=4, verbose_name='Base Price Multiplier')),
                ('travel_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Travel Fee')),
                ('service_categories', models.ManyToManyField(related_name='service_areas', to='core.servicecategory')),
            ],
            options={
                'verbose_name': 'Service Area',
                'verbose_name_plural': 'Service Areas',
                'ordering': ['country', 'state', 'city', 'name'],
                'unique_together': {('name', 'city', 'state', 'country')},
            },
        ),
    ]
