# Generated by Django 5.0.2 on 2025-10-02 20:15

import django.core.validators
import django.db.models.deletion
import utils.abstract_models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('attachments', '0001_initial'),
        ('core', '0001_initial'),
        ('locations', '0001_initial'),
        ('resumes', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('title', utils.abstract_models.TitleField(max_length=100, verbose_name='Title')),
                ('slug', utils.abstract_models.AutoSlugField(editable=False, max_length=80, populate_from='title', unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('is_available', utils.abstract_models.AvailableField(default=True, verbose_name='Available')),
                ('job_type', models.CharField(choices=[('full_time', 'Full-Time'), ('part_time', 'Part-Time'), ('internship', 'Internship')], default='full_time', max_length=20, verbose_name='Job Type')),
                ('special_requirements', models.TextField(blank=True, verbose_name='Special Requirements')),
                ('location', utils.abstract_models.AdvancedLocationField(max_length=255, verbose_name='Location[Advanced]')),
                ('service_date', models.DateField(blank=True, null=True, verbose_name='Preferred Service Date')),
                ('service_time', models.TimeField(blank=True, null=True, verbose_name='Preferred Service Time')),
                ('urgency', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20, verbose_name='Urgency')),
                ('budget_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Minimum Budget')),
                ('budget_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maximum Budget')),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Final Price')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='Job Status')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Published At')),
                ('assigned_at', models.DateTimeField(blank=True, null=True, verbose_name='Assigned At')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='Cancelled At')),
                ('attachments', models.ManyToManyField(blank=True, related_name='jobs', to='attachments.attachment')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='locations.city')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='users.company')),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='users.employer')),
                ('service_subcategory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='core.servicesubcategory')),
                ('skills', models.ManyToManyField(blank=True, related_name='jobs', to='users.skill')),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FavoriteJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.job')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookmarkJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.job')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('estimated_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Estimated Duration (hours)')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20, verbose_name='Status')),
                ('applied_at', models.DateTimeField(auto_now_add=True, verbose_name='Applied On')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='Accepted At')),
                ('rejected_at', models.DateTimeField(blank=True, null=True, verbose_name='Rejected At')),
                ('withdrawn_at', models.DateTimeField(blank=True, null=True, verbose_name='Withdrawn At')),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='users.master')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='jobs.job')),
                ('resume', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_applications', to='resumes.masterresume')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
                'ordering': ['amount', '-created_at'],
                'unique_together': {('job', 'applicant')},
            },
        ),
        migrations.CreateModel(
            name='JobAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='assigned', max_length=20, verbose_name='Assignment Status')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Assigned At')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('progress_notes', models.TextField(blank=True, verbose_name='Progress Notes')),
                ('completion_notes', models.TextField(blank=True, verbose_name='Completion Notes')),
                ('client_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Client Rating')),
                ('client_review', models.TextField(blank=True, verbose_name='Client Review')),
                ('accepted_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='jobs.jobapplication')),
                ('attachments', models.ManyToManyField(blank=True, related_name='assignments', to='attachments.attachment')),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='jobs.job')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='users.master')),
            ],
            options={
                'verbose_name': 'Job Assignment',
                'verbose_name_plural': 'Job Assignments',
            },
        ),
        migrations.CreateModel(
            name='JobDispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dispute_type', models.CharField(choices=[('payment_issue', 'Payment Issue'), ('service_quality', 'Service Quality'), ('timeliness', 'Timeliness'), ('other', 'Other')], default='other', max_length=50, verbose_name='Dispute Type')),
                ('description', models.TextField(verbose_name='Description')),
                ('evidence', models.JSONField(default=list, verbose_name='Evidence')),
                ('status', models.CharField(choices=[('open', 'Open'), ('under_review', 'Under Review'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20, verbose_name='Status')),
                ('admin_notes', models.TextField(blank=True, verbose_name='Admin Notes')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resolved At')),
                ('resolution', models.TextField(blank=True, verbose_name='Resolution')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='jobs.job')),
                ('raised_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes_raised', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disputes_resolved', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job Dispute',
                'verbose_name_plural': 'Job Disputes',
                'ordering': ['-created_at'],
            },
        ),
    ]
