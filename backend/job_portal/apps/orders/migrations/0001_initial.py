# Generated by Django 5.0.2 on 2025-09-11 07:21

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('title', models.CharField(max_length=200, verbose_name='Order Title')),
                ('description', models.TextField(verbose_name='Order Description')),
                ('location', models.TextField(verbose_name='Service Location')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=100, verbose_name='State/Province')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Postal Code')),
                ('service_date', models.DateField(blank=True, null=True, verbose_name='Preferred Service Date')),
                ('service_time', models.TimeField(blank=True, null=True, verbose_name='Preferred Service Time')),
                ('urgency', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20, verbose_name='Urgency')),
                ('budget_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Minimum Budget')),
                ('budget_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maximum Budget')),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Final Price')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('bidding', 'Bidding'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('disputed', 'Disputed')], default='draft', max_length=20, verbose_name='Order Status')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Published At')),
                ('assigned_at', models.DateTimeField(blank=True, null=True, verbose_name='Assigned At')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='Cancelled At')),
                ('attachments', models.JSONField(default=list, verbose_name='Attachments')),
                ('special_requirements', models.TextField(blank=True, verbose_name='Special Requirements')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured Order')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='users.clientprofile')),
                ('service_subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.servicesubcategory')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Bid Amount')),
                ('description', models.TextField(verbose_name='Bid Description')),
                ('estimated_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Estimated Duration (hours)')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20, verbose_name='Bid Status')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='Accepted At')),
                ('rejected_at', models.DateTimeField(blank=True, null=True, verbose_name='Rejected At')),
                ('withdrawn_at', models.DateTimeField(blank=True, null=True, verbose_name='Withdrawn At')),
                ('terms_conditions', models.TextField(blank=True, verbose_name='Terms & Conditions')),
                ('is_negotiable', models.BooleanField(default=False, verbose_name='Price Negotiable')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='users.serviceproviderprofile')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='orders.order')),
            ],
            options={
                'verbose_name': 'Bid',
                'verbose_name_plural': 'Bids',
                'ordering': ['amount', '-created_at'],
                'unique_together': {('order', 'provider')},
            },
        ),
        migrations.CreateModel(
            name='OrderAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Assigned At')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Start Time')),
                ('progress_notes', models.TextField(blank=True, verbose_name='Progress Notes')),
                ('completion_notes', models.TextField(blank=True, verbose_name='Completion Notes')),
                ('client_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Client Rating')),
                ('client_review', models.TextField(blank=True, verbose_name='Client Review')),
                ('accepted_bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='orders.bid')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='orders.order')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='users.serviceproviderprofile')),
            ],
            options={
                'verbose_name': 'Order Assignment',
                'verbose_name_plural': 'Order Assignments',
            },
        ),
        migrations.CreateModel(
            name='OrderDispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dispute_type', models.CharField(choices=[('quality_issue', 'Quality Issue'), ('payment_dispute', 'Payment Dispute'), ('schedule_conflict', 'Schedule Conflict'), ('communication_issue', 'Communication Issue'), ('other', 'Other')], max_length=50, verbose_name='Dispute Type')),
                ('description', models.TextField(verbose_name='Dispute Description')),
                ('evidence', models.JSONField(default=list, verbose_name='Evidence')),
                ('status', models.CharField(choices=[('open', 'Open'), ('under_review', 'Under Review'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20, verbose_name='Status')),
                ('admin_notes', models.TextField(blank=True, verbose_name='Admin Notes')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resolved At')),
                ('resolution', models.TextField(blank=True, verbose_name='Resolution')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='orders.order')),
                ('raised_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes_raised', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disputes_resolved', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order Dispute',
                'verbose_name_plural': 'Order Disputes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('photo_url', models.URLField(verbose_name='Photo URL')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Caption')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Primary Photo')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_photos', to='orders.order')),
            ],
            options={
                'verbose_name': 'Order Photo',
                'verbose_name_plural': 'Order Photos',
                'ordering': ['-is_primary', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderAddon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('addon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_addons', to='core.serviceaddon')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_addons', to='orders.order')),
            ],
            options={
                'verbose_name': 'Order Addon',
                'verbose_name_plural': 'Order Addons',
                'unique_together': {('order', 'addon')},
            },
        ),
    ]
