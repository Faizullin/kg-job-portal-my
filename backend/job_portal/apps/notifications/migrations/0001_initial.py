# Generated by Django 5.0.2 on 2025-09-11 07:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('push', 'Push Notification'), ('sms', 'SMS'), ('in_app', 'In-App')], max_length=20, verbose_name='Channel')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='pending', max_length=20, verbose_name='Status')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('failed_at', models.DateTimeField(blank=True, null=True, verbose_name='Failed At')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='Retry Count')),
                ('external_id', models.CharField(blank=True, max_length=100, verbose_name='External ID')),
                ('external_response', models.JSONField(default=dict, verbose_name='External Response')),
            ],
            options={
                'verbose_name': 'Notification Delivery',
                'verbose_name_plural': 'Notification Deliveries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('notification_type', models.CharField(choices=[('order_update', 'Order Update'), ('bid_received', 'Bid Received'), ('payment_success', 'Payment Success'), ('payment_failed', 'Payment Failed'), ('chat_message', 'Chat Message'), ('system_alert', 'System Alert'), ('promotional', 'Promotional')], max_length=50, verbose_name='Notification Type')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message Content')),
                ('short_message', models.CharField(blank=True, max_length=160, verbose_name='Short Message')),
                ('email_enabled', models.BooleanField(default=True, verbose_name='Email Enabled')),
                ('push_enabled', models.BooleanField(default=True, verbose_name='Push Enabled')),
                ('sms_enabled', models.BooleanField(default=False, verbose_name='SMS Enabled')),
                ('in_app_enabled', models.BooleanField(default=True, verbose_name='In-App Enabled')),
                ('variables', models.JSONField(default=list, verbose_name='Template Variables')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'ordering': ['notification_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='Push Notifications')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='SMS Notifications')),
                ('in_app_notifications', models.BooleanField(default=True, verbose_name='In-App Notifications')),
                ('order_updates', models.BooleanField(default=True, verbose_name='Order Updates')),
                ('bid_notifications', models.BooleanField(default=True, verbose_name='Bid Notifications')),
                ('payment_notifications', models.BooleanField(default=True, verbose_name='Payment Notifications')),
                ('chat_notifications', models.BooleanField(default=True, verbose_name='Chat Notifications')),
                ('promotional_notifications', models.BooleanField(default=False, verbose_name='Promotional Notifications')),
                ('system_notifications', models.BooleanField(default=True, verbose_name='System Notifications')),
                ('quiet_hours_start', models.TimeField(blank=True, null=True, verbose_name='Quiet Hours Start')),
                ('quiet_hours_end', models.TimeField(blank=True, null=True, verbose_name='Quiet Hours End')),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='Timezone')),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='immediate', max_length=20, verbose_name='Digest Frequency')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('restored_at', models.DateTimeField(blank=True, null=True, verbose_name='Restored at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message Content')),
                ('short_message', models.CharField(blank=True, max_length=160, verbose_name='Short Message')),
                ('context_data', models.JSONField(default=dict, verbose_name='Context Data')),
                ('related_object_type', models.CharField(blank=True, max_length=50, verbose_name='Related Object Type')),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Related Object ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('failed_at', models.DateTimeField(blank=True, null=True, verbose_name='Failed At')),
                ('is_read', models.BooleanField(default=False, verbose_name='Read')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20, verbose_name='Priority')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.notificationtemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Notification',
                'verbose_name_plural': 'User Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveIntegerField(default=0, verbose_name='Priority')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='Scheduled At')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='Retry Count')),
                ('max_retries', models.PositiveIntegerField(default=3, verbose_name='Max Retries')),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20, verbose_name='Status')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queue_entries', to='notifications.usernotification')),
            ],
            options={
                'verbose_name': 'Notification Queue',
                'verbose_name_plural': 'Notification Queue',
                'ordering': ['priority', 'scheduled_at', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('created', 'Created'), ('queued', 'Queued'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('read', 'Read'), ('cancelled', 'Cancelled')], max_length=50, verbose_name='Action')),
                ('details', models.JSONField(default=dict, verbose_name='Details')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('processing_time', models.FloatField(blank=True, null=True, verbose_name='Processing Time (seconds)')),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notificationdelivery')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.usernotification')),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='notificationdelivery',
            name='notification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='notifications.usernotification'),
        ),
    ]
