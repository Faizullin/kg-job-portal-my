# Generated by Django 5.0.2 on 2025-08-26 13:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(verbose_name='Date')),
                ('gross_merchandise_volume', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Gross Merchandise Volume')),
                ('net_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Net Revenue')),
                ('profit_margin', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Profit Margin (%)')),
                ('order_fulfillment_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Order Fulfillment Rate (%)')),
                ('average_order_processing_time', models.FloatField(default=0, verbose_name='Average Order Processing Time (hours)')),
                ('customer_satisfaction_score', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Customer Satisfaction Score')),
                ('month_over_month_growth', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Month over Month Growth (%)')),
                ('year_over_year_growth', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Year over Year Growth (%)')),
                ('market_share', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Market Share (%)')),
                ('competitive_position', models.CharField(blank=True, choices=[('leader', 'Market Leader'), ('challenger', 'Market Challenger'), ('follower', 'Market Follower'), ('niche', 'Niche Player')], max_length=20, verbose_name='Competitive Position')),
            ],
            options={
                'verbose_name': 'Business Metrics',
                'verbose_name_plural': 'Business Metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='OrderAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(unique=True, verbose_name='Date')),
                ('total_orders', models.PositiveIntegerField(default=0, verbose_name='Total Orders')),
                ('new_orders', models.PositiveIntegerField(default=0, verbose_name='New Orders')),
                ('completed_orders', models.PositiveIntegerField(default=0, verbose_name='Completed Orders')),
                ('cancelled_orders', models.PositiveIntegerField(default=0, verbose_name='Cancelled Orders')),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Revenue')),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Average Order Value')),
                ('total_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total Fees')),
                ('total_bids', models.PositiveIntegerField(default=0, verbose_name='Total Bids')),
                ('average_bids_per_order', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Average Bids per Order')),
                ('active_clients', models.PositiveIntegerField(default=0, verbose_name='Active Clients')),
                ('active_providers', models.PositiveIntegerField(default=0, verbose_name='Active Providers')),
                ('new_users', models.PositiveIntegerField(default=0, verbose_name='New Users')),
            ],
            options={
                'verbose_name': 'Order Analytics',
                'verbose_name_plural': 'Order Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SearchAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(verbose_name='Date')),
                ('total_searches', models.PositiveIntegerField(default=0, verbose_name='Total Searches')),
                ('unique_searchers', models.PositiveIntegerField(default=0, verbose_name='Unique Searchers')),
                ('searches_with_results', models.PositiveIntegerField(default=0, verbose_name='Searches with Results')),
                ('searches_without_results', models.PositiveIntegerField(default=0, verbose_name='Searches without Results')),
                ('top_search_terms', models.JSONField(default=list, verbose_name='Top Search Terms')),
                ('top_categories_searched', models.JSONField(default=list, verbose_name='Top Categories Searched')),
                ('searches_leading_to_orders', models.PositiveIntegerField(default=0, verbose_name='Searches Leading to Orders')),
                ('search_to_order_conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Search to Order Conversion Rate (%)')),
            ],
            options={
                'verbose_name': 'Search Analytics',
                'verbose_name_plural': 'Search Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(verbose_name='Date')),
                ('time_period', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='daily', max_length=20, verbose_name='Time Period')),
                ('average_response_time', models.FloatField(default=0, verbose_name='Average Response Time (ms)')),
                ('max_response_time', models.FloatField(default=0, verbose_name='Max Response Time (ms)')),
                ('min_response_time', models.FloatField(default=0, verbose_name='Min Response Time (ms)')),
                ('total_errors', models.PositiveIntegerField(default=0, verbose_name='Total Errors')),
                ('error_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Error Rate (%)')),
                ('active_users', models.PositiveIntegerField(default=0, verbose_name='Active Users')),
                ('concurrent_users', models.PositiveIntegerField(default=0, verbose_name='Concurrent Users')),
                ('database_queries', models.PositiveIntegerField(default=0, verbose_name='Database Queries')),
                ('cpu_usage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='CPU Usage (%)')),
                ('memory_usage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Memory Usage (%)')),
                ('disk_usage', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Disk Usage (%)')),
            ],
            options={
                'verbose_name': 'Performance Metrics',
                'verbose_name_plural': 'Performance Metrics',
                'ordering': ['-date', 'time_period'],
                'unique_together': {('date', 'time_period')},
            },
        ),
        migrations.CreateModel(
            name='UserRetentionAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(verbose_name='Date')),
                ('user_type', models.CharField(choices=[('client', 'Client'), ('service_provider', 'Service Provider')], max_length=20, verbose_name='User Type')),
                ('cohort_size', models.PositiveIntegerField(default=0, verbose_name='Cohort Size')),
                ('day_1_retention', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Day 1 Retention (%)')),
                ('day_7_retention', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Day 7 Retention (%)')),
                ('day_30_retention', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Day 30 Retention (%)')),
                ('average_sessions_per_user', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Average Sessions per User')),
                ('average_session_duration', models.FloatField(default=0, verbose_name='Average Session Duration (minutes)')),
            ],
            options={
                'verbose_name': 'User Retention Analytics',
                'verbose_name_plural': 'User Retention Analytics',
                'ordering': ['-date', 'user_type'],
                'unique_together': {('date', 'user_type')},
            },
        ),
        migrations.CreateModel(
            name='ServiceCategoryAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(verbose_name='Date')),
                ('order_count', models.PositiveIntegerField(default=0, verbose_name='Order Count')),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total Revenue')),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Average Order Value')),
                ('bid_count', models.PositiveIntegerField(default=0, verbose_name='Bid Count')),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Completion Rate (%)')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='core.servicecategory')),
            ],
            options={
                'verbose_name': 'Service Category Analytics',
                'verbose_name_plural': 'Service Category Analytics',
                'ordering': ['-date', 'category'],
                'indexes': [models.Index(fields=['category', 'date'], name='analytics_s_categor_789740_idx')],
                'unique_together': {('date', 'category')},
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('order_created', 'Order Created'), ('order_viewed', 'Order Viewed'), ('bid_submitted', 'Bid Submitted'), ('chat_message', 'Chat Message'), ('payment_made', 'Payment Made'), ('profile_updated', 'Profile Updated'), ('search_performed', 'Search Performed'), ('service_viewed', 'Service Viewed')], max_length=50, verbose_name='Activity Type')),
                ('context_data', models.JSONField(default=dict, verbose_name='Context Data')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('session_id', models.CharField(blank=True, max_length=100, verbose_name='Session ID')),
                ('related_object_type', models.CharField(blank=True, max_length=50, verbose_name='Related Object Type')),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Related Object ID')),
                ('response_time', models.FloatField(blank=True, null=True, verbose_name='Response Time (seconds)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'activity_type', 'created_at'], name='analytics_u_user_id_11191e_idx'), models.Index(fields=['activity_type', 'created_at'], name='analytics_u_activit_2317fd_idx')],
            },
        ),
    ]
