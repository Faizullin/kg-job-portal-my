openapi: 3.0.3
info:
  title: Master KG Job Portal API
  version: 1.0.0
  description: Master KG Job Portal API
paths:
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/schema/json/:
    get:
      operationId: schema_json_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/analytics/activities/:
    get:
      operationId: v1_analytics_activities_list
      parameters:
      - in: query
        name: activity_type
        schema:
          type: string
          enum:
          - bid_submitted
          - chat_message
          - login
          - logout
          - order_created
          - order_viewed
          - payment_made
          - profile_updated
          - search_performed
          - service_viewed
        description: |-
          * `login` - Login
          * `logout` - Logout
          * `order_created` - Order Created
          * `order_viewed` - Order Viewed
          * `bid_submitted` - Bid Submitted
          * `chat_message` - Chat Message
          * `payment_made` - Payment Made
          * `profile_updated` - Profile Updated
          * `search_performed` - Search Performed
          * `service_viewed` - Service Viewed
      - in: query
        name: ip_address
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserActivityList'
          description: ''
  /api/v1/analytics/activities/create/:
    post:
      operationId: v1_analytics_activities_create_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserActivityCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserActivityCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserActivityCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivityCreate'
          description: ''
  /api/v1/analytics/business/:
    get:
      operationId: v1_analytics_business_list
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBusinessMetricsList'
          description: ''
  /api/v1/analytics/business/create/:
    post:
      operationId: v1_analytics_business_create_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessMetricsCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessMetricsCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessMetricsCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessMetricsCreate'
          description: ''
  /api/v1/analytics/categories/:
    get:
      operationId: v1_analytics_categories_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceCategoryAnalyticsList'
          description: ''
  /api/v1/analytics/categories/create/:
    post:
      operationId: v1_analytics_categories_create_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCategoryAnalyticsCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceCategoryAnalyticsCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceCategoryAnalyticsCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCategoryAnalyticsCreate'
          description: ''
  /api/v1/analytics/dashboard/:
    get:
      operationId: v1_analytics_dashboard_retrieve
      description: Get dashboard overview data.
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResponse'
          description: ''
  /api/v1/analytics/orders/:
    get:
      operationId: v1_analytics_orders_list
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderAnalyticsList'
          description: ''
  /api/v1/analytics/orders/create/:
    post:
      operationId: v1_analytics_orders_create_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAnalyticsCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderAnalyticsCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderAnalyticsCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAnalyticsCreate'
          description: ''
  /api/v1/analytics/performance/:
    get:
      operationId: v1_analytics_performance_list
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: time_period
        schema:
          type: string
          enum:
          - daily
          - hourly
          - monthly
          - weekly
        description: |-
          * `hourly` - Hourly
          * `daily` - Daily
          * `weekly` - Weekly
          * `monthly` - Monthly
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPerformanceMetricsList'
          description: ''
  /api/v1/auth/firebase/:
    post:
      operationId: v1_auth_firebase_create
      description: Authenticate user with Firebase ID token or register new user if
        verified.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FireBaseAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FireBaseAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FireBaseAuth'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FireBaseAuth'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: v1_auth_logout_create
      description: User logout view - enhanced version of api_users LogOutView
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogoutResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogoutResponse'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
          description: ''
  /api/v1/chat/attachments/:
    get:
      operationId: v1_chat_attachments_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatAttachmentList'
          description: ''
  /api/v1/chat/attachments/{id}/:
    get:
      operationId: v1_chat_attachments_retrieve
      description: Mixin to provide standardized exception handling for DRF views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatAttachment'
          description: ''
    delete:
      operationId: v1_chat_attachments_destroy
      description: Mixin to provide standardized exception handling for DRF views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/chat/attachments/create/:
    post:
      operationId: v1_chat_attachments_create_create
      description: Mixin to provide standardized exception handling for DRF views.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatAttachmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatAttachmentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatAttachmentCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatAttachmentCreate'
          description: ''
  /api/v1/chat/messages/:
    get:
      operationId: v1_chat_messages_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageList'
          description: ''
  /api/v1/chat/messages/{id}/:
    get:
      operationId: v1_chat_messages_retrieve
      description: Mixin to provide standardized exception handling for DRF views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    put:
      operationId: v1_chat_messages_update
      description: Mixin to provide standardized exception handling for DRF views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageUpdate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageUpdate'
          description: ''
    patch:
      operationId: v1_chat_messages_partial_update
      description: Mixin to provide standardized exception handling for DRF views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMessageUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMessageUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMessageUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageUpdate'
          description: ''
    delete:
      operationId: v1_chat_messages_destroy
      description: Mixin to provide standardized exception handling for DRF views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/chat/messages/create/:
    post:
      operationId: v1_chat_messages_create_create
      description: Mixin to provide standardized exception handling for DRF views.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageCreate'
          description: ''
  /api/v1/chat/participants/:
    get:
      operationId: v1_chat_participants_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatParticipantList'
          description: ''
  /api/v1/chat/participants/create/:
    post:
      operationId: v1_chat_participants_create_create
      description: Mixin to provide standardized exception handling for DRF views.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatParticipantCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatParticipantCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatParticipantCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatParticipantCreate'
          description: ''
  /api/v1/chat/rooms/:
    get:
      operationId: v1_chat_rooms_list
      description: Mixin to provide standardized exception handling for DRF views.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatRoomList'
          description: ''
  /api/v1/chat/rooms/{id}/:
    get:
      operationId: v1_chat_rooms_retrieve
      description: Mixin to provide standardized exception handling for DRF views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
    put:
      operationId: v1_chat_rooms_update
      description: Mixin to provide standardized exception handling for DRF views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoomUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRoomUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRoomUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomUpdate'
          description: ''
    patch:
      operationId: v1_chat_rooms_partial_update
      description: Mixin to provide standardized exception handling for DRF views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatRoomUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChatRoomUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChatRoomUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomUpdate'
          description: ''
  /api/v1/chat/rooms/create/:
    post:
      operationId: v1_chat_rooms_create_create
      description: Mixin to provide standardized exception handling for DRF views.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoomCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRoomCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRoomCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomCreate'
          description: ''
  /api/v1/chat/websocket-info/:
    get:
      operationId: v1_chat_websocket_info_retrieve
      description: Get WebSocket connection information for the current user.
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebSocketInfo'
          description: ''
  /api/v1/core/app-versions/:
    get:
      operationId: v1_core_app_versions_list
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: platform
        schema:
          type: string
          enum:
          - all
          - android
          - ios
          - web
        description: |-
          * `android` - Android
          * `ios` - iOS
          * `web` - Web
          * `all` - All Platforms
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppVersionList'
          description: ''
  /api/v1/core/languages/:
    get:
      operationId: v1_core_languages_list
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_default
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLanguageList'
          description: ''
  /api/v1/core/service-areas/:
    get:
      operationId: v1_core_service_areas_list
      parameters:
      - in: query
        name: country
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceAreaList'
          description: ''
  /api/v1/core/service-categories/:
    get:
      operationId: v1_core_service_categories_list
      parameters:
      - in: query
        name: featured
        schema:
          type: boolean
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceCategoryList'
          description: ''
  /api/v1/core/service-subcategories/:
    get:
      operationId: v1_core_service_subcategories_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: featured
        schema:
          type: boolean
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceSubcategoryList'
          description: ''
  /api/v1/core/system-settings/:
    get:
      operationId: v1_core_system_settings_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSystemSettingsList'
          description: ''
  /api/v1/notifications/:
    get:
      operationId: v1_notifications_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/v1/notifications/{id}/:
    get:
      operationId: v1_notifications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    put:
      operationId: v1_notifications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUpdate'
          description: ''
    patch:
      operationId: v1_notifications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUpdate'
          description: ''
  /api/v1/notifications/create/:
    post:
      operationId: v1_notifications_create_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCreate'
          description: ''
  /api/v1/notifications/logs/:
    get:
      operationId: v1_notifications_logs_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationLogList'
          description: ''
  /api/v1/notifications/settings/:
    get:
      operationId: v1_notifications_settings_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationSettingList'
          description: ''
  /api/v1/notifications/settings/{id}/:
    get:
      operationId: v1_notifications_settings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: ''
    put:
      operationId: v1_notifications_settings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationSettingUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationSettingUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettingUpdate'
          description: ''
    patch:
      operationId: v1_notifications_settings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationSettingUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationSettingUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationSettingUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettingUpdate'
          description: ''
  /api/v1/notifications/settings/create/:
    post:
      operationId: v1_notifications_settings_create_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationSettingCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationSettingCreate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettingCreate'
          description: ''
  /api/v1/notifications/templates/:
    get:
      operationId: v1_notifications_templates_list
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: notification_type
        schema:
          type: string
          enum:
          - bid_received
          - chat_message
          - order_update
          - payment_failed
          - payment_success
          - promotional
          - system_alert
        description: |-
          * `order_update` - Order Update
          * `bid_received` - Bid Received
          * `payment_success` - Payment Success
          * `payment_failed` - Payment Failed
          * `chat_message` - Chat Message
          * `system_alert` - System Alert
          * `promotional` - Promotional
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationTemplateList'
          description: ''
  /api/v1/notifications/templates/{id}/:
    get:
      operationId: v1_notifications_templates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
    put:
      operationId: v1_notifications_templates_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTemplateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationTemplateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationTemplateUpdate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplateUpdate'
          description: ''
    patch:
      operationId: v1_notifications_templates_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplateUpdate'
          description: ''
  /api/v1/notifications/templates/create/:
    post:
      operationId: v1_notifications_templates_create_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTemplateCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationTemplateCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationTemplateCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplateCreate'
          description: ''
  /api/v1/orders/:
    get:
      operationId: v1_orders_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
  /api/v1/orders/{order_id}/bids/:
    post:
      operationId: v1_orders_bids_create
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BidCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BidCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BidCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BidCreate'
          description: ''
  /api/v1/orders/{order_id}/disputes/:
    post:
      operationId: v1_orders_disputes_create
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDisputeCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderDisputeCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderDisputeCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisputeCreate'
          description: ''
  /api/v1/orders/{id}/:
    get:
      operationId: v1_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: v1_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderUpdate'
          description: ''
    patch:
      operationId: v1_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderUpdate'
          description: ''
  /api/v1/orders/addons/:
    get:
      operationId: v1_orders_addons_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderAddonList'
          description: ''
  /api/v1/orders/bids/:
    get:
      operationId: v1_orders_bids_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBidList'
          description: ''
  /api/v1/orders/create/:
    post:
      operationId: v1_orders_create_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
          description: ''
  /api/v1/orders/disputes/:
    get:
      operationId: v1_orders_disputes_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderDisputeList'
          description: ''
  /api/v1/orders/disputes/{id}/:
    get:
      operationId: v1_orders_disputes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDispute'
          description: ''
    put:
      operationId: v1_orders_disputes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDisputeUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderDisputeUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderDisputeUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisputeUpdate'
          description: ''
    patch:
      operationId: v1_orders_disputes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderDisputeUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderDisputeUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderDisputeUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDisputeUpdate'
          description: ''
  /api/v1/orders/photos/:
    get:
      operationId: v1_orders_photos_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderPhotoList'
          description: ''
  /api/v1/payments/:
    get:
      operationId: v1_payments_list
      description: Mixin to require specific group membership for class-based views.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
  /api/v1/payments/{id}/:
    get:
      operationId: v1_payments_retrieve
      description: Mixin to require specific group membership for class-based views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: v1_payments_update
      description: Mixin to require specific group membership for class-based views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCreate'
          description: ''
    patch:
      operationId: v1_payments_partial_update
      description: Mixin to require specific group membership for class-based views.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentCreate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCreate'
          description: ''
  /api/v1/payments/create/:
    post:
      operationId: v1_payments_create_create
      description: Mixin to require specific group membership for class-based views.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCreate'
          description: ''
  /api/v1/payments/invoices/:
    get:
      operationId: v1_payments_invoices_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceList'
          description: ''
  /api/v1/payments/invoices/{id}/:
    get:
      operationId: v1_payments_invoices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/v1/payments/invoices/create/:
    post:
      operationId: v1_payments_invoices_create_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceCreate'
          description: ''
  /api/v1/payments/methods/:
    get:
      operationId: v1_payments_methods_list
      description: Mixin to require specific group membership for class-based views.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentMethodList'
          description: ''
  /api/v1/payments/methods/{id}/:
    get:
      operationId: v1_payments_methods_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    put:
      operationId: v1_payments_methods_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMethodUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMethodUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodUpdate'
          description: ''
    patch:
      operationId: v1_payments_methods_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMethodUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMethodUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMethodUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodUpdate'
          description: ''
    delete:
      operationId: v1_payments_methods_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/payments/methods/create/:
    post:
      operationId: v1_payments_methods_create_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMethodCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMethodCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodCreate'
          description: ''
  /api/v1/payments/webhooks/events/:
    get:
      operationId: v1_payments_webhooks_events_retrieve
      description: List webhook events.
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/payments/webhooks/events/{event_id}/retry/:
    post:
      operationId: v1_payments_webhooks_events_retry_create
      description: Retry processing a webhook event.
      parameters:
      - in: path
        name: event_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/payments/webhooks/stripe/drf/:
    post:
      operationId: v1_payments_webhooks_stripe_drf_create
      description: Simple Stripe webhook handler.
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/profile/:
    get:
      operationId: v1_profile_retrieve
      description: User profile view - enhanced version of api_users GetUserView
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: v1_profile_update
      description: User profile view - enhanced version of api_users GetUserView
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    patch:
      operationId: v1_profile_partial_update
      description: User profile view - enhanced version of api_users GetUserView
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
  /api/v1/registration/:
    post:
      operationId: v1_registration_create
      description: Complete user registration with role and service categories
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/reviews/:
    get:
      operationId: v1_reviews_list
      description: List and create reviews.
      parameters:
      - in: query
        name: is_verified
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: overall_rating
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: v1_reviews_create
      description: List and create reviews.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCreate'
          description: ''
  /api/v1/reviews/{id}/:
    get:
      operationId: v1_reviews_retrieve
      description: Retrieve, update, and delete specific review.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: v1_reviews_update
      description: Retrieve, update, and delete specific review.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewUpdate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewUpdate'
          description: ''
    patch:
      operationId: v1_reviews_partial_update
      description: Retrieve, update, and delete specific review.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewUpdate'
          description: ''
    delete:
      operationId: v1_reviews_destroy
      description: Retrieve, update, and delete specific review.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/reviews/analytics/:
    get:
      operationId: v1_reviews_analytics_retrieve
      description: Get review analytics.
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewAnalytics'
          description: ''
  /api/v1/reviews/order/{order_id}/:
    get:
      operationId: v1_reviews_order_list
      description: Get reviews for a specific order.
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
  /api/v1/reviews/provider/{provider_id}/:
    get:
      operationId: v1_reviews_provider_list
      description: Get reviews for a specific service provider.
      parameters:
      - in: query
        name: is_verified
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: overall_rating
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: provider_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
  /api/v1/search/global/:
    get:
      operationId: v1_search_global_list
      description: Simple global search across all content types.
      parameters:
      - in: query
        name: city
        schema:
          type: string
        description: Filter by city
      - in: query
        name: max_budget
        schema:
          type: number
        description: Maximum budget
      - in: query
        name: min_budget
        schema:
          type: number
        description: Minimum budget
      - in: query
        name: min_rating
        schema:
          type: number
        description: Minimum rating for providers
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
        description: Search query
      - in: query
        name: service_category
        schema:
          type: number
        description: Filter by service category ID
      - in: query
        name: type
        schema:
          type: string
          enum:
          - all
          - orders
          - providers
          - services
        description: |-
          Type of search to perform

          * `all` - All
          * `orders` - Orders
          * `providers` - Providers
          * `services` - Services
      - in: query
        name: urgency
        schema:
          type: string
          enum:
          - high
          - low
          - medium
          - urgent
        description: |-
          Filter by urgency level

          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `urgent` - Urgent
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGlobalSearchResponseList'
          description: ''
  /api/v1/search/orders/:
    get:
      operationId: v1_search_orders_list
      description: Search specifically for orders (job vacancies).
      parameters:
      - in: query
        name: city
        schema:
          type: string
        description: Filter by city
      - in: query
        name: max_budget
        schema:
          type: number
        description: Maximum budget
      - in: query
        name: min_budget
        schema:
          type: number
        description: Minimum budget
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
        description: Search query
      - in: query
        name: service_category
        schema:
          type: number
        description: Filter by service category ID
      - in: query
        name: urgency
        schema:
          type: string
          enum:
          - high
          - low
          - medium
          - urgent
        description: |-
          Filter by urgency level

          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `urgent` - Urgent
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderSearchResponseList'
          description: ''
  /api/v1/search/providers/:
    get:
      operationId: v1_search_providers_list
      description: Search specifically for service providers.
      parameters:
      - in: query
        name: city
        schema:
          type: string
        description: Filter by city
      - in: query
        name: min_rating
        schema:
          type: number
        description: Minimum rating
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
        description: Search query
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProviderSearchResponseList'
          description: ''
  /api/v1/users/:
    get:
      operationId: v1_users_list
      description: List all users - not in api_users, useful for admin
      parameters:
      - in: query
        name: blocked
        schema:
          type: boolean
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user_type
        schema:
          type: string
          enum:
          - free
          - paid
          - premium_paid
        description: |-
          * `free` - Бесплатный
          * `paid` - Оплаченный
          * `premium_paid` - Премиум оплаченный
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserListList'
          description: ''
  /api/v1/users/client/:
    get:
      operationId: v1_users_client_retrieve
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    put:
      operationId: v1_users_client_update
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientUpdate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUpdate'
          description: ''
    patch:
      operationId: v1_users_client_partial_update
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUpdate'
          description: ''
  /api/v1/users/clients/:
    get:
      operationId: v1_users_clients_list
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientList'
          description: ''
  /api/v1/users/profile/:
    get:
      operationId: v1_users_profile_retrieve
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: v1_users_profile_update
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUpdate'
          description: ''
    patch:
      operationId: v1_users_profile_partial_update
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUpdate'
          description: ''
  /api/v1/users/profiles/:
    get:
      operationId: v1_users_profiles_list
      parameters:
      - in: query
        name: gender
        schema:
          type: string
          enum:
          - female
          - male
          - other
          - prefer_not_to_say
        description: |-
          * `male` - Male
          * `female` - Female
          * `other` - Other
          * `prefer_not_to_say` - Prefer not to say
      - in: query
        name: is_verified
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user_type
        schema:
          type: string
          enum:
          - both
          - client
          - service_provider
        description: |-
          * `client` - Client
          * `service_provider` - Service Provider
          * `both` - Both
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
  /api/v1/users/provider/:
    get:
      operationId: v1_users_provider_retrieve
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProvider'
          description: ''
    put:
      operationId: v1_users_provider_update
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceProviderUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceProviderUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceProviderUpdate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProviderUpdate'
          description: ''
    patch:
      operationId: v1_users_provider_partial_update
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceProviderUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceProviderUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceProviderUpdate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProviderUpdate'
          description: ''
  /api/v1/users/providers/:
    get:
      operationId: v1_users_providers_list
      parameters:
      - in: query
        name: is_available
        schema:
          type: boolean
      - in: query
        name: is_verified_provider
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceProviderList'
          description: ''
components:
  schemas:
    ActionEnum:
      enum:
      - created
      - queued
      - sent
      - delivered
      - failed
      - read
      - cancelled
      type: string
      description: |-
        * `created` - Создан
        * `queued` - Queued
        * `sent` - Sent
        * `delivered` - Delivered
        * `failed` - Failed
        * `read` - Read
        * `cancelled` - Cancelled
    ActivityTypeEnum:
      enum:
      - login
      - logout
      - order_created
      - order_viewed
      - bid_submitted
      - chat_message
      - payment_made
      - profile_updated
      - search_performed
      - service_viewed
      type: string
      description: |-
        * `login` - Login
        * `logout` - Logout
        * `order_created` - Order Created
        * `order_viewed` - Order Viewed
        * `bid_submitted` - Bid Submitted
        * `chat_message` - Chat Message
        * `payment_made` - Payment Made
        * `profile_updated` - Profile Updated
        * `search_performed` - Search Performed
        * `service_viewed` - Service Viewed
    AppVersion:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        version:
          type: string
          title: Версия
          maxLength: 20
        build_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        is_active:
          type: boolean
          title: Действие
        is_forced_update:
          type: boolean
          title: Forced Update
        release_date:
          type: string
          format: date-time
          readOnly: true
        download_url:
          type: string
          format: uri
          maxLength: 200
        platform_display:
          type: string
          readOnly: true
      required:
      - build_number
      - id
      - platform_display
      - release_date
      - version
    Bid:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        provider:
          type: integer
        provider_name:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Bid Amount
        description:
          type: string
          title: Bid Description
        estimated_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Estimated Duration (hours)
        status:
          allOf:
          - $ref: '#/components/schemas/BidStatusEnum'
          title: Bid Status
        status_display:
          type: string
          readOnly: true
        is_negotiable:
          type: boolean
          title: Price Negotiable
        terms_conditions:
          type: string
          title: Terms & Conditions
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - description
      - id
      - order
      - provider
      - provider_name
      - status_display
    BidCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Bid Amount
        description:
          type: string
          title: Bid Description
        estimated_duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Estimated Duration (hours)
        terms_conditions:
          type: string
          title: Terms & Conditions
        is_negotiable:
          type: boolean
          title: Price Negotiable
      required:
      - amount
      - description
    BidStatusEnum:
      enum:
      - pending
      - accepted
      - rejected
      - withdrawn
      type: string
      description: |-
        * `pending` - Pending
        * `accepted` - Accepted
        * `rejected` - Rejected
        * `withdrawn` - Withdrawn
    BlankEnum:
      enum:
      - ''
    BusinessMetrics:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        gross_merchandise_volume:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        net_revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        profit_margin:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Profit Margin (%)
        order_fulfillment_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Order Fulfillment Rate (%)
        average_order_processing_time:
          type: number
          format: double
          title: Average Order Processing Time (hours)
        customer_satisfaction_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        month_over_month_growth:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          title: Month over Month Growth (%)
        year_over_year_growth:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          title: Year over Year Growth (%)
        market_share:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Market Share (%)
        competitive_position:
          oneOf:
          - $ref: '#/components/schemas/CompetitivePositionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date
      - id
    BusinessMetricsCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        date:
          type: string
          format: date
        gross_merchandise_volume:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        net_revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        profit_margin:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Profit Margin (%)
        order_fulfillment_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Order Fulfillment Rate (%)
        average_order_processing_time:
          type: number
          format: double
          title: Average Order Processing Time (hours)
        customer_satisfaction_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
      required:
      - date
    ChatAttachment:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: integer
        file_name:
          type: string
          maxLength: 255
        file_type:
          type: string
          maxLength: 50
        file_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: File Size (bytes)
        file_size_display:
          type: string
          readOnly: true
        file_url:
          type: string
          format: uri
          maxLength: 200
        thumbnail_url:
          type: string
          format: uri
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - file_name
      - file_size
      - file_size_display
      - file_type
      - file_url
      - id
      - message
    ChatAttachmentCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        message:
          type: integer
        file_name:
          type: string
          maxLength: 255
        file_type:
          type: string
          maxLength: 50
        file_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: File Size (bytes)
        file_url:
          type: string
          format: uri
          maxLength: 200
        thumbnail_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - file_name
      - file_size
      - file_type
      - file_url
      - message
    ChatParticipant:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        chat_room:
          type: integer
        chat_room_title:
          type: string
          readOnly: true
        user:
          type: integer
        user_name:
          type: string
          readOnly: true
        is_online:
          type: boolean
          title: Online
        last_seen:
          type: string
          format: date-time
          nullable: true
        unread_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Unread Messages
        notifications_enabled:
          type: boolean
        mute_until:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - chat_room
      - chat_room_title
      - created_at
      - id
      - updated_at
      - user
      - user_name
    ChatParticipantCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        chat_room:
          type: integer
        user:
          type: integer
        is_online:
          type: boolean
          title: Online
        notifications_enabled:
          type: boolean
      required:
      - chat_room
      - user
    ChatRoom:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Chat Title
          maxLength: 200
        chat_type:
          $ref: '#/components/schemas/ChatTypeEnum'
        chat_type_display:
          type: string
          readOnly: true
        order:
          type: integer
        order_title:
          type: string
          readOnly: true
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ChatParticipant'
          readOnly: true
        is_active:
          type: boolean
          title: Действие
        last_message_at:
          type: string
          format: date-time
          nullable: true
        last_message:
          type: string
          readOnly: true
        unread_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - chat_type_display
      - created_at
      - id
      - last_message
      - order
      - order_title
      - participants
      - unread_count
      - updated_at
    ChatRoomCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        title:
          type: string
          title: Chat Title
          maxLength: 200
        chat_type:
          $ref: '#/components/schemas/ChatTypeEnum'
        order:
          type: integer
        is_active:
          type: boolean
          title: Действие
      required:
      - order
    ChatRoomUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        title:
          type: string
          title: Chat Title
          maxLength: 200
        chat_type:
          $ref: '#/components/schemas/ChatTypeEnum'
        is_active:
          type: boolean
          title: Действие
    ChatTypeEnum:
      enum:
      - order_chat
      - support_chat
      - general_chat
      type: string
      description: |-
        * `order_chat` - Order Chat
        * `support_chat` - Support Chat
        * `general_chat` - General Chat
    Client:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        restored_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        preferred_service_areas: {}
        budget_preferences: {}
        total_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        completed_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        cancelled_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        user_profile:
          type: integer
        favorite_providers:
          type: array
          items:
            type: integer
      required:
      - created_at
      - id
      - updated_at
      - user_profile
    ClientUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        restored_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        preferred_service_areas: {}
        budget_preferences: {}
        total_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        completed_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        cancelled_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        user_profile:
          type: integer
        favorite_providers:
          type: array
          items:
            type: integer
      required:
      - created_at
      - id
      - updated_at
      - user_profile
    CompetitivePositionEnum:
      enum:
      - leader
      - challenger
      - follower
      - niche
      type: string
      description: |-
        * `leader` - Market Leader
        * `challenger` - Market Challenger
        * `follower` - Market Follower
        * `niche` - Niche Player
    ComplexityLevelEnum:
      enum:
      - beginner
      - intermediate
      - advanced
      - expert
      type: string
      description: |-
        * `beginner` - Beginner
        * `intermediate` - Intermediate
        * `advanced` - Advanced
        * `expert` - Expert
    DashboardResponse:
      type: object
      description: Serializer for dashboard API response.
      properties:
        current_month:
          type: object
          additionalProperties: {}
      required:
      - current_month
    DigestFrequencyEnum:
      enum:
      - immediate
      - hourly
      - daily
      - weekly
      type: string
      description: |-
        * `immediate` - Immediate
        * `hourly` - Hourly
        * `daily` - Daily
        * `weekly` - Weekly
    DisputeTypeEnum:
      enum:
      - quality_issue
      - payment_dispute
      - schedule_conflict
      - communication_issue
      - other
      type: string
      description: |-
        * `quality_issue` - Quality Issue
        * `payment_dispute` - Payment Dispute
        * `schedule_conflict` - Schedule Conflict
        * `communication_issue` - Communication Issue
        * `other` - Other
    FireBaseAuth:
      type: object
      description: Serializer for Firebase authentication request
      properties:
        id_token:
          type: string
          description: Firebase ID token
      required:
      - id_token
    GenderEnum:
      enum:
      - male
      - female
      - other
      - prefer_not_to_say
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
        * `other` - Other
        * `prefer_not_to_say` - Prefer not to say
    GlobalSearchResponse:
      type: object
      description: Serializer for global search response.
      properties:
        query:
          type: string
          description: Search query
        search_type:
          type: string
          description: Type of search performed
        results:
          type: object
          additionalProperties: {}
          description: Search results by category
      required:
      - query
      - results
      - search_type
    Invoice:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        invoice_number:
          type: string
          maxLength: 50
        status:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatusEnum'
          title: Статус
        status_display:
          type: string
          readOnly: true
        subtotal:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        platform_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
          nullable: true
        paid_date:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - invoice_number
      - order
      - status_display
      - subtotal
      - total_amount
    InvoiceCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        order:
          type: integer
        subtotal:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        platform_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
          nullable: true
      required:
      - order
      - subtotal
    InvoiceStatusEnum:
      enum:
      - draft
      - sent
      - paid
      - overdue
      - cancelled
      type: string
      description: |-
        * `draft` - Draft
        * `sent` - Sent
        * `paid` - Paid
        * `overdue` - Overdue
        * `cancelled` - Cancelled
    Language:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          title: Language Code
          maxLength: 5
        name:
          type: string
          title: Language Name
          maxLength: 50
        native_name:
          type: string
          maxLength: 50
        is_active:
          type: boolean
          title: Действие
        is_default:
          type: boolean
          title: Default Language
        flag_icon:
          type: string
          maxLength: 50
        rtl_support:
          type: boolean
      required:
      - code
      - id
      - name
      - native_name
    LogoutResponse:
      type: object
      description: Serializer for logout response
      properties:
        message:
          type: string
          description: Logout confirmation message
      required:
      - message
    Message:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        chat_room:
          type: integer
        sender:
          type: integer
        sender_name:
          type: string
          readOnly: true
        content:
          type: string
          title: Message Content
        message_type:
          $ref: '#/components/schemas/MessageTypeEnum'
        message_type_display:
          type: string
          readOnly: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/ChatAttachment'
          readOnly: true
        is_read:
          type: boolean
          title: Read
        read_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - attachments
      - chat_room
      - content
      - created_at
      - id
      - message_type_display
      - sender
      - sender_name
    MessageCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        chat_room:
          type: integer
        content:
          type: string
          title: Message Content
        message_type:
          $ref: '#/components/schemas/MessageTypeEnum'
      required:
      - chat_room
      - content
    MessageTypeEnum:
      enum:
      - text
      - image
      - file
      - system
      - order_update
      type: string
      description: |-
        * `text` - Текст
        * `image` - Изображение
        * `file` - Файл
        * `system` - System Message
        * `order_update` - Order Update
    MessageUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        content:
          type: string
          title: Message Content
        message_type:
          $ref: '#/components/schemas/MessageTypeEnum'
      required:
      - content
    MethodTypeEnum:
      enum:
      - credit_card
      - debit_card
      - bank_transfer
      - digital_wallet
      type: string
      description: |-
        * `credit_card` - Credit Card
        * `debit_card` - Debit Card
        * `bank_transfer` - Bank Transfer
        * `digital_wallet` - Digital Wallet
    Notification:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        template:
          type: integer
        subject:
          type: string
          maxLength: 200
        message:
          type: string
          title: Message Content
        short_message:
          type: string
          maxLength: 160
        context_data: {}
        related_object_type:
          type: string
          maxLength: 50
        related_object_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/NotificationStatusEnum'
          title: Статус
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        priority_display:
          type: string
          readOnly: true
        is_read:
          type: boolean
          title: Read
        is_read_display:
          type: string
          readOnly: true
        read_at:
          type: string
          format: date-time
          nullable: true
        sent_at:
          type: string
          format: date-time
          nullable: true
        delivered_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - is_read_display
      - message
      - priority_display
      - subject
      - template
      - user
    NotificationCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        user:
          type: integer
        template:
          type: integer
        subject:
          type: string
          maxLength: 200
        message:
          type: string
          title: Message Content
        short_message:
          type: string
          maxLength: 160
        context_data: {}
        related_object_type:
          type: string
          maxLength: 50
        related_object_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        priority:
          $ref: '#/components/schemas/PriorityEnum'
      required:
      - message
      - subject
      - template
      - user
    NotificationLog:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        notification:
          type: integer
        delivery:
          type: integer
          nullable: true
        action:
          allOf:
          - $ref: '#/components/schemas/ActionEnum'
          title: Действие
        status_display:
          type: string
          readOnly: true
        details: {}
        error_message:
          type: string
        processing_time:
          type: number
          format: double
          nullable: true
          title: Processing Time (seconds)
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - action
      - created_at
      - id
      - notification
      - status_display
    NotificationSetting:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        email_notifications:
          type: boolean
        push_notifications:
          type: boolean
        sms_notifications:
          type: boolean
        in_app_notifications:
          type: boolean
        order_updates:
          type: boolean
        bid_notifications:
          type: boolean
        payment_notifications:
          type: boolean
        chat_notifications:
          type: boolean
        promotional_notifications:
          type: boolean
        system_notifications:
          type: boolean
        quiet_hours_start:
          type: string
          format: time
          nullable: true
        quiet_hours_end:
          type: string
          format: time
          nullable: true
        timezone:
          type: string
          maxLength: 50
        digest_frequency:
          $ref: '#/components/schemas/DigestFrequencyEnum'
      required:
      - id
      - user
    NotificationSettingCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        email_notifications:
          type: boolean
        push_notifications:
          type: boolean
        sms_notifications:
          type: boolean
        in_app_notifications:
          type: boolean
        quiet_hours_start:
          type: string
          format: time
          nullable: true
        quiet_hours_end:
          type: string
          format: time
          nullable: true
        timezone:
          type: string
          maxLength: 50
    NotificationSettingUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        email_notifications:
          type: boolean
        push_notifications:
          type: boolean
        sms_notifications:
          type: boolean
        in_app_notifications:
          type: boolean
        order_updates:
          type: boolean
        bid_notifications:
          type: boolean
        payment_notifications:
          type: boolean
        chat_notifications:
          type: boolean
        promotional_notifications:
          type: boolean
        system_notifications:
          type: boolean
        quiet_hours_start:
          type: string
          format: time
          nullable: true
        quiet_hours_end:
          type: string
          format: time
          nullable: true
        timezone:
          type: string
          maxLength: 50
        digest_frequency:
          $ref: '#/components/schemas/DigestFrequencyEnum'
    NotificationStatusEnum:
      enum:
      - pending
      - sent
      - delivered
      - failed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `sent` - Sent
        * `delivered` - Delivered
        * `failed` - Failed
        * `cancelled` - Cancelled
    NotificationTemplate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Template Name
          maxLength: 100
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        notification_type_display:
          type: string
          readOnly: true
        subject:
          type: string
          maxLength: 200
        message:
          type: string
          title: Message Content
        short_message:
          type: string
          maxLength: 160
        variables:
          title: Template Variables
        is_active:
          type: boolean
          title: Действие
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - message
      - name
      - notification_type
      - notification_type_display
      - subject
    NotificationTemplateCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        name:
          type: string
          title: Template Name
          maxLength: 100
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        subject:
          type: string
          maxLength: 200
        message:
          type: string
          title: Message Content
        short_message:
          type: string
          maxLength: 160
        variables:
          title: Template Variables
        is_active:
          type: boolean
          title: Действие
      required:
      - message
      - name
      - notification_type
      - subject
    NotificationTemplateUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        subject:
          type: string
          maxLength: 200
        message:
          type: string
          title: Message Content
        short_message:
          type: string
          maxLength: 160
        variables:
          title: Template Variables
        is_active:
          type: boolean
          title: Действие
      required:
      - message
      - subject
    NotificationTypeEnum:
      enum:
      - order_update
      - bid_received
      - payment_success
      - payment_failed
      - chat_message
      - system_alert
      - promotional
      type: string
      description: |-
        * `order_update` - Order Update
        * `bid_received` - Bid Received
        * `payment_success` - Payment Success
        * `payment_failed` - Payment Failed
        * `chat_message` - Chat Message
        * `system_alert` - System Alert
        * `promotional` - Promotional
    NotificationUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        is_read:
          type: boolean
          title: Read
        read_at:
          type: string
          format: date-time
          nullable: true
    NullEnum:
      enum:
      - null
    Order:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: integer
        client_name:
          type: string
          readOnly: true
        service_subcategory:
          type: integer
        title:
          type: string
          title: Order Title
          maxLength: 200
        description:
          type: string
          title: Order Description
        status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          title: Order Status
        status_display:
          type: string
          readOnly: true
        location:
          type: string
          title: Service Location
        city:
          type: string
          maxLength: 100
        state:
          type: string
          title: State/Province
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        service_date:
          type: string
          format: date
          nullable: true
          title: Preferred Service Date
        service_time:
          type: string
          format: time
          nullable: true
          title: Preferred Service Time
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        budget_min:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Minimum Budget
        budget_max:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Maximum Budget
        final_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        addons:
          type: array
          items:
            $ref: '#/components/schemas/OrderAddon'
          readOnly: true
        photos:
          type: array
          items:
            $ref: '#/components/schemas/OrderPhoto'
          readOnly: true
        bids:
          type: array
          items:
            $ref: '#/components/schemas/Bid'
          readOnly: true
        attachments: {}
        special_requirements:
          type: string
        is_featured:
          type: boolean
          title: Featured Order
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - addons
      - bids
      - city
      - client
      - client_name
      - country
      - created_at
      - description
      - id
      - location
      - photos
      - postal_code
      - service_subcategory
      - state
      - status_display
      - title
      - updated_at
    OrderAddon:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        addon:
          type: integer
        addon_name:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - addon
      - addon_name
      - id
      - order
      - price
    OrderAnalytics:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        total_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        new_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        completed_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        cancelled_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        average_order_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        revenue_per_order:
          type: string
          readOnly: true
        total_revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        total_bids:
          type: integer
          maximum: 2147483647
          minimum: 0
        average_bids_per_order:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        active_clients:
          type: integer
          maximum: 2147483647
          minimum: 0
        active_providers:
          type: integer
          maximum: 2147483647
          minimum: 0
        new_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date
      - id
      - revenue_per_order
    OrderAnalyticsCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        date:
          type: string
          format: date
        total_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        new_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        completed_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        cancelled_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        average_order_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        total_bids:
          type: integer
          maximum: 2147483647
          minimum: 0
        average_bids_per_order:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        active_clients:
          type: integer
          maximum: 2147483647
          minimum: 0
        active_providers:
          type: integer
          maximum: 2147483647
          minimum: 0
        new_users:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - date
    OrderCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        service_subcategory:
          type: integer
        title:
          type: string
          title: Order Title
          maxLength: 200
        description:
          type: string
          title: Order Description
        location:
          type: string
          title: Service Location
        city:
          type: string
          maxLength: 100
        state:
          type: string
          title: State/Province
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        service_date:
          type: string
          format: date
          nullable: true
          title: Preferred Service Date
        service_time:
          type: string
          format: time
          nullable: true
          title: Preferred Service Time
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        budget_min:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Minimum Budget
        budget_max:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Maximum Budget
        special_requirements:
          type: string
      required:
      - city
      - country
      - description
      - location
      - postal_code
      - service_subcategory
      - state
      - title
    OrderDispute:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        raised_by:
          type: integer
        dispute_type:
          $ref: '#/components/schemas/DisputeTypeEnum'
        dispute_type_display:
          type: string
          readOnly: true
        description:
          type: string
          title: Dispute Description
        evidence: {}
        status:
          allOf:
          - $ref: '#/components/schemas/Status61fEnum'
          title: Статус
        status_display:
          type: string
          readOnly: true
        admin_notes:
          type: string
        resolved_by:
          type: integer
          nullable: true
        resolved_at:
          type: string
          format: date-time
          nullable: true
        resolution:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - dispute_type
      - dispute_type_display
      - id
      - order
      - raised_by
      - status_display
    OrderDisputeCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        dispute_type:
          $ref: '#/components/schemas/DisputeTypeEnum'
        description:
          type: string
          title: Dispute Description
        evidence: {}
      required:
      - description
      - dispute_type
    OrderDisputeUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status61fEnum'
          title: Статус
        admin_notes:
          type: string
        resolution:
          type: string
    OrderPhoto:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        photo_url:
          type: string
          format: uri
          maxLength: 200
        caption:
          type: string
          maxLength: 200
        is_primary:
          type: boolean
          title: Primary Photo
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - order
      - photo_url
    OrderSearchResponse:
      type: object
      description: Serializer for order search response.
      properties:
        query:
          type: string
          description: Search query
        count:
          type: integer
          description: Number of results found
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
          description: List of order results
      required:
      - count
      - query
      - results
    OrderStatusEnum:
      enum:
      - draft
      - published
      - bidding
      - assigned
      - in_progress
      - completed
      - cancelled
      - disputed
      type: string
      description: |-
        * `draft` - Draft
        * `published` - Published
        * `bidding` - Bidding
        * `assigned` - Assigned
        * `in_progress` - In Progress
        * `completed` - Completed
        * `cancelled` - Cancelled
        * `disputed` - Disputed
    OrderUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        title:
          type: string
          title: Order Title
          maxLength: 200
        description:
          type: string
          title: Order Description
        location:
          type: string
          title: Service Location
        city:
          type: string
          maxLength: 100
        state:
          type: string
          title: State/Province
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        service_date:
          type: string
          format: date
          nullable: true
          title: Preferred Service Date
        service_time:
          type: string
          format: time
          nullable: true
          title: Preferred Service Time
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        budget_min:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Minimum Budget
        budget_max:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Maximum Budget
        special_requirements:
          type: string
      required:
      - city
      - country
      - description
      - location
      - postal_code
      - state
      - title
    PaginatedAppVersionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AppVersion'
    PaginatedBidList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Bid'
    PaginatedBusinessMetricsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BusinessMetrics'
    PaginatedChatAttachmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatAttachment'
    PaginatedChatParticipantList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatParticipant'
    PaginatedChatRoomList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatRoom'
    PaginatedClientList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Client'
    PaginatedGlobalSearchResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GlobalSearchResponse'
    PaginatedInvoiceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    PaginatedLanguageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Language'
    PaginatedMessageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    PaginatedNotificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedNotificationLogList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationLog'
    PaginatedNotificationSettingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationSetting'
    PaginatedNotificationTemplateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTemplate'
    PaginatedOrderAddonList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderAddon'
    PaginatedOrderAnalyticsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderAnalytics'
    PaginatedOrderDisputeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderDispute'
    PaginatedOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedOrderPhotoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderPhoto'
    PaginatedOrderSearchResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderSearchResponse'
    PaginatedPaymentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedPaymentMethodList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
    PaginatedPerformanceMetricsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PerformanceMetrics'
    PaginatedProviderSearchResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProviderSearchResponse'
    PaginatedReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PaginatedServiceAreaList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceArea'
    PaginatedServiceCategoryAnalyticsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceCategoryAnalytics'
    PaginatedServiceCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceCategory'
    PaginatedServiceProviderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceProvider'
    PaginatedServiceSubcategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceSubcategory'
    PaginatedSystemSettingsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SystemSettings'
    PaginatedUserActivityList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserActivity'
    PaginatedUserListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserList'
    PaginatedUserProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
    PatchedChatRoomUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        title:
          type: string
          title: Chat Title
          maxLength: 200
        chat_type:
          $ref: '#/components/schemas/ChatTypeEnum'
        is_active:
          type: boolean
          title: Действие
    PatchedClientUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        restored_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        preferred_service_areas: {}
        budget_preferences: {}
        total_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        completed_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        cancelled_orders:
          type: integer
          maximum: 2147483647
          minimum: 0
        user_profile:
          type: integer
        favorite_providers:
          type: array
          items:
            type: integer
    PatchedMessageUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        content:
          type: string
          title: Message Content
        message_type:
          $ref: '#/components/schemas/MessageTypeEnum'
    PatchedNotificationSettingUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        email_notifications:
          type: boolean
        push_notifications:
          type: boolean
        sms_notifications:
          type: boolean
        in_app_notifications:
          type: boolean
        order_updates:
          type: boolean
        bid_notifications:
          type: boolean
        payment_notifications:
          type: boolean
        chat_notifications:
          type: boolean
        promotional_notifications:
          type: boolean
        system_notifications:
          type: boolean
        quiet_hours_start:
          type: string
          format: time
          nullable: true
        quiet_hours_end:
          type: string
          format: time
          nullable: true
        timezone:
          type: string
          maxLength: 50
        digest_frequency:
          $ref: '#/components/schemas/DigestFrequencyEnum'
    PatchedNotificationTemplateUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        subject:
          type: string
          maxLength: 200
        message:
          type: string
          title: Message Content
        short_message:
          type: string
          maxLength: 160
        variables:
          title: Template Variables
        is_active:
          type: boolean
          title: Действие
    PatchedNotificationUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        is_read:
          type: boolean
          title: Read
        read_at:
          type: string
          format: date-time
          nullable: true
    PatchedOrderDisputeUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status61fEnum'
          title: Статус
        admin_notes:
          type: string
        resolution:
          type: string
    PatchedOrderUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        title:
          type: string
          title: Order Title
          maxLength: 200
        description:
          type: string
          title: Order Description
        location:
          type: string
          title: Service Location
        city:
          type: string
          maxLength: 100
        state:
          type: string
          title: State/Province
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        service_date:
          type: string
          format: date
          nullable: true
          title: Preferred Service Date
        service_time:
          type: string
          format: time
          nullable: true
          title: Preferred Service Time
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        budget_min:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Minimum Budget
        budget_max:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          title: Maximum Budget
        special_requirements:
          type: string
    PatchedPaymentCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        invoice:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
        payment_method:
          type: integer
    PatchedPaymentMethodUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        is_default:
          type: boolean
          title: Default Method
        is_active:
          type: boolean
          title: Действие
    PatchedReviewUpdate:
      type: object
      description: Serializer for updating existing reviews.
      properties:
        overall_rating:
          type: integer
          maximum: 5
          minimum: 1
          description: Overall rating from 1 to 5 stars
        title:
          type: string
          title: Review Title
          maxLength: 200
        comment:
          type: string
          title: Review Comment
    PatchedServiceProviderUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        restored_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        business_name:
          type: string
          maxLength: 200
        business_description:
          type: string
        business_license:
          type: string
          maxLength: 100
        years_of_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
        service_areas: {}
        travel_radius:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Travel Radius (km)
        is_available:
          type: boolean
          title: Available for Work
        availability_schedule: {}
        average_rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        total_reviews:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_verified_provider:
          type: boolean
          title: Verified Provider
        verification_documents: {}
        user_profile:
          type: integer
    PatchedUserProfileUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        restored_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        bio:
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        gender:
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        phone_number:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          title: State/Province
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        notification_preferences: {}
        is_verified:
          type: boolean
          title: Verified
        verification_date:
          type: string
          format: date-time
          nullable: true
        user:
          type: integer
        preferred_language:
          type: integer
          nullable: true
    PatchedUserUpdate:
      type: object
      description: Serializer for updating user profile - enhanced version of api_users
        EditUserSettingsView
      properties:
        name:
          type: string
          title: Имя
          maxLength: 255
        email:
          type: string
          format: email
          readOnly: true
        phone_number:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        description:
          type: string
          nullable: true
          title: Описание
        photo_url:
          type: string
          format: uri
          nullable: true
          title: Ссылка на фото (Firebase)
          maxLength: 200
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        user_role:
          nullable: true
          title: Роль пользователя
          oneOf:
          - $ref: '#/components/schemas/UserRoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        timezone_difference:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Разница во времени
    Payment:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        invoice:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          title: Статус
        status_display:
          type: string
          readOnly: true
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethod'
          readOnly: true
        stripe_payment_intent_id:
          type: string
          maxLength: 255
        stripe_charge_id:
          type: string
          maxLength: 255
        processed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - id
      - invoice
      - payment_method
      - status_display
      - updated_at
    PaymentCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        invoice:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
        payment_method:
          type: integer
      required:
      - amount
      - invoice
      - payment_method
    PaymentMethod:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        method_type:
          $ref: '#/components/schemas/MethodTypeEnum'
        method_type_display:
          type: string
          readOnly: true
        card_last4:
          type: string
          title: Last 4 Digits
          maxLength: 4
        card_brand:
          type: string
          maxLength: 20
        card_exp_month:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Expiry Month
        card_exp_year:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Expiry Year
        is_default:
          type: boolean
          title: Default Method
        is_active:
          type: boolean
          title: Действие
      required:
      - id
      - method_type
      - method_type_display
      - user
    PaymentMethodCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        method_type:
          $ref: '#/components/schemas/MethodTypeEnum'
        card_last4:
          type: string
          title: Last 4 Digits
          maxLength: 4
        card_brand:
          type: string
          maxLength: 20
        card_exp_month:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Expiry Month
        card_exp_year:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Expiry Year
      required:
      - method_type
    PaymentMethodUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        is_default:
          type: boolean
          title: Default Method
        is_active:
          type: boolean
          title: Действие
    PaymentStatusEnum:
      enum:
      - pending
      - processing
      - completed
      - failed
      - cancelled
      - refunded
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `completed` - Completed
        * `failed` - Failed
        * `cancelled` - Cancelled
        * `refunded` - Refunded
    PerformanceMetrics:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        time_period:
          allOf:
          - $ref: '#/components/schemas/TimePeriodEnum'
          default: daily
        average_response_time:
          type: number
          format: double
          title: Average Response Time (ms)
        max_response_time:
          type: number
          format: double
          title: Max Response Time (ms)
        min_response_time:
          type: number
          format: double
          title: Min Response Time (ms)
        total_errors:
          type: integer
          maximum: 2147483647
          minimum: 0
        error_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Error Rate (%)
        active_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        concurrent_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        database_queries:
          type: integer
          maximum: 2147483647
          minimum: 0
        cpu_usage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: CPU Usage (%)
        memory_usage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Memory Usage (%)
        disk_usage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Disk Usage (%)
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date
      - id
    PlatformEnum:
      enum:
      - android
      - ios
      - web
      - all
      type: string
      description: |-
        * `android` - Android
        * `ios` - iOS
        * `web` - Web
        * `all` - All Platforms
    PriorityEnum:
      enum:
      - low
      - normal
      - high
      - urgent
      type: string
      description: |-
        * `low` - Low
        * `normal` - Normal
        * `high` - High
        * `urgent` - Urgent
    ProviderSearchResponse:
      type: object
      description: Serializer for provider search response.
      properties:
        query:
          type: string
          description: Search query
        count:
          type: integer
          description: Number of results found
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceProvider'
          description: List of provider results
      required:
      - count
      - query
      - results
    Review:
      type: object
      description: Serializer for reading review data.
      properties:
        id:
          type: integer
          readOnly: true
        order_id:
          type: integer
          readOnly: true
        order_title:
          type: string
          readOnly: true
        reviewer_name:
          type: string
          readOnly: true
        reviewer_email:
          type: string
          format: email
          readOnly: true
        provider_name:
          type: string
          readOnly: true
        provider_email:
          type: string
          format: email
          readOnly: true
        overall_rating:
          type: integer
          maximum: 5
          minimum: 1
          description: Overall rating from 1 to 5 stars
        title:
          type: string
          title: Review Title
          maxLength: 200
        comment:
          type: string
          title: Review Comment
        is_verified:
          type: boolean
          readOnly: true
          title: Verified Review
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - is_verified
      - order_id
      - order_title
      - overall_rating
      - provider_email
      - provider_name
      - reviewer_email
      - reviewer_name
      - updated_at
    ReviewAnalytics:
      type: object
      description: Serializer for review analytics data.
      properties:
        total_reviews:
          type: integer
        average_rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        rating_distribution:
          type: array
          items:
            type: object
            additionalProperties: {}
      required:
      - average_rating
      - rating_distribution
      - total_reviews
    ReviewCreate:
      type: object
      description: Serializer for creating new reviews.
      properties:
        order:
          type: integer
        provider:
          type: integer
        overall_rating:
          type: integer
          maximum: 5
          minimum: 1
          description: Overall rating from 1 to 5 stars
        title:
          type: string
          title: Review Title
          maxLength: 200
        comment:
          type: string
          title: Review Comment
      required:
      - order
      - overall_rating
      - provider
    ReviewUpdate:
      type: object
      description: Serializer for updating existing reviews.
      properties:
        overall_rating:
          type: integer
          maximum: 5
          minimum: 1
          description: Overall rating from 1 to 5 stars
        title:
          type: string
          title: Review Title
          maxLength: 200
        comment:
          type: string
          title: Review Comment
      required:
      - overall_rating
    ServiceArea:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Area Name
          maxLength: 100
        city:
          type: string
          maxLength: 100
        state:
          type: string
          title: State/Province
          maxLength: 100
        country:
          type: string
          maxLength: 100
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        is_active:
          type: boolean
          title: Действие
        base_price_multiplier:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        travel_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        coordinates:
          type: string
          readOnly: true
      required:
      - city
      - coordinates
      - country
      - id
      - name
      - state
    ServiceCategory:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Category Name
          maxLength: 100
        description:
          type: string
        icon:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 7
        is_active:
          type: boolean
          title: Действие
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: 0
        banner_image:
          type: string
          format: uri
          maxLength: 200
        featured:
          type: boolean
          title: Featured Category
        commission_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Commission Rate (%)
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/ServiceSubcategory'
          readOnly: true
      required:
      - description
      - id
      - name
      - subcategories
    ServiceCategoryAnalytics:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        category:
          type: integer
        order_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        average_order_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        bid_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        completion_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Completion Rate (%)
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - created_at
      - date
      - id
    ServiceCategoryAnalyticsCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        date:
          type: string
          format: date
        category:
          type: integer
        order_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        average_order_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        bid_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        completion_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          title: Completion Rate (%)
      required:
      - category
      - date
    ServiceProvider:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        restored_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        business_name:
          type: string
          maxLength: 200
        business_description:
          type: string
        business_license:
          type: string
          maxLength: 100
        years_of_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
        service_areas: {}
        travel_radius:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Travel Radius (km)
        is_available:
          type: boolean
          title: Available for Work
        availability_schedule: {}
        average_rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        total_reviews:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_verified_provider:
          type: boolean
          title: Verified Provider
        verification_documents: {}
        user_profile:
          type: integer
      required:
      - created_at
      - id
      - updated_at
      - user_profile
    ServiceProviderUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        restored_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        business_name:
          type: string
          maxLength: 200
        business_description:
          type: string
        business_license:
          type: string
          maxLength: 100
        years_of_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
        service_areas: {}
        travel_radius:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Travel Radius (km)
        is_available:
          type: boolean
          title: Available for Work
        availability_schedule: {}
        average_rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        total_reviews:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_verified_provider:
          type: boolean
          title: Verified Provider
        verification_documents: {}
        user_profile:
          type: integer
      required:
      - created_at
      - id
      - updated_at
      - user_profile
    ServiceSubcategory:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Subcategory Name
          maxLength: 100
        description:
          type: string
        icon:
          type: string
          maxLength: 50
        is_active:
          type: boolean
          title: Действие
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: 0
        image:
          type: string
          format: uri
          title: Изображение
          maxLength: 200
        featured:
          type: boolean
          title: Featured Subcategory
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        complexity_level:
          $ref: '#/components/schemas/ComplexityLevelEnum'
        complexity_level_display:
          type: string
          readOnly: true
      required:
      - complexity_level_display
      - description
      - id
      - name
    SettingTypeEnum:
      enum:
      - string
      - integer
      - boolean
      - json
      - file
      type: string
      description: |-
        * `string` - String
        * `integer` - Целое
        * `boolean` - Boolean
        * `json` - JSON
        * `file` - Файл
    Status61fEnum:
      enum:
      - open
      - under_review
      - resolved
      - closed
      type: string
      description: |-
        * `open` - Open
        * `under_review` - Under Review
        * `resolved` - Resolved
        * `closed` - Closed
    SystemSettings:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        key:
          type: string
          title: Setting Key
          maxLength: 100
        value:
          type: string
          title: Setting Value
        description:
          type: string
        is_public:
          type: boolean
          title: Public Setting
        setting_type:
          $ref: '#/components/schemas/SettingTypeEnum'
        category:
          type: string
          maxLength: 50
        setting_type_display:
          type: string
          readOnly: true
      required:
      - id
      - key
      - setting_type_display
      - value
    TimePeriodEnum:
      enum:
      - hourly
      - daily
      - weekly
      - monthly
      type: string
      description: |-
        * `hourly` - Hourly
        * `daily` - Daily
        * `weekly` - Weekly
        * `monthly` - Monthly
    UrgencyEnum:
      enum:
      - low
      - medium
      - high
      - urgent
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `urgent` - Urgent
    UserActivity:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        activity_type:
          $ref: '#/components/schemas/ActivityTypeEnum'
        activity_type_display:
          type: string
          readOnly: true
        context_data: {}
        ip_address:
          type: string
          nullable: true
        user_agent:
          type: string
        session_id:
          type: string
          maxLength: 100
        related_object_type:
          type: string
          maxLength: 50
        related_object_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        response_time:
          type: number
          format: double
          nullable: true
          title: Response Time (seconds)
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - activity_type
      - activity_type_display
      - created_at
      - id
      - user
    UserActivityCreate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        activity_type:
          $ref: '#/components/schemas/ActivityTypeEnum'
        context_data: {}
        related_object_type:
          type: string
          maxLength: 50
        related_object_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
      required:
      - activity_type
    UserList:
      type: object
      description: Serializer for listing users - not in api_users, useful for admin
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 255
        full_name:
          type: string
          readOnly: true
        is_active:
          type: boolean
          title: Активный
          description: Отметьте, если пользователь должен считаться активным. Уберите
            эту отметку вместо удаления учётной записи.
        date_joined:
          type: string
          format: date-time
          title: Дата регистрации
        groups:
          type: string
          readOnly: true
      required:
      - email
      - full_name
      - groups
      - id
      - username
    UserProfile:
      type: object
      description: Serializer for user profile information - enhanced version of api_users
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 255
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Последний вход
        is_active:
          type: boolean
          title: Активный
          description: Отметьте, если пользователь должен считаться активным. Уберите
            эту отметку вместо удаления учётной записи.
        is_staff:
          type: boolean
          readOnly: true
          title: Статус персонала
          description: Отметьте, если пользователь может входить в административную
            часть сайта.
        is_superuser:
          type: boolean
          readOnly: true
          title: Статус суперпользователя
          description: Указывает, что пользователь имеет все права без явного их назначения.
        groups:
          type: string
          readOnly: true
        permissions:
          type: string
          readOnly: true
        user_role:
          nullable: true
          title: Роль пользователя
          oneOf:
          - $ref: '#/components/schemas/UserRoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        name:
          type: string
          title: Имя
          maxLength: 255
        phone_number:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        description:
          type: string
          nullable: true
          title: Описание
        photo:
          type: string
          format: uri
          nullable: true
          title: Фото
        photo_url:
          type: string
          format: uri
          nullable: true
          title: Ссылка на фото (Firebase)
          maxLength: 200
        timezone_difference:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Разница во времени
        points:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Баллы
        day_streak:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Дневная серия
        max_day_streak:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Максимальная дневная серия
      required:
      - date_joined
      - email
      - full_name
      - groups
      - id
      - is_staff
      - is_superuser
      - last_login
      - name
      - permissions
      - username
    UserProfileUpdate:
      type: object
      description: Serializer for models with timestamp fields.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        restored_at:
          type: string
          format: date-time
          nullable: true
        is_deleted:
          type: boolean
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        bio:
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        gender:
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        phone_number:
          type: string
          maxLength: 20
        address:
          type: string
        city:
          type: string
          maxLength: 100
        state:
          type: string
          title: State/Province
          maxLength: 100
        country:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        notification_preferences: {}
        is_verified:
          type: boolean
          title: Verified
        verification_date:
          type: string
          format: date-time
          nullable: true
        user:
          type: integer
        preferred_language:
          type: integer
          nullable: true
      required:
      - created_at
      - id
      - updated_at
      - user
    UserRoleEnum:
      enum:
      - job_seeker
      - service_provider
      type: string
      description: |-
        * `job_seeker` - Ищу работу
        * `service_provider` - Предлагаю услуги
    UserTypeEnum:
      enum:
      - client
      - service_provider
      - both
      type: string
      description: |-
        * `client` - Client
        * `service_provider` - Service Provider
        * `both` - Both
    UserUpdate:
      type: object
      description: Serializer for updating user profile - enhanced version of api_users
        EditUserSettingsView
      properties:
        name:
          type: string
          title: Имя
          maxLength: 255
        email:
          type: string
          format: email
          readOnly: true
        phone_number:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        description:
          type: string
          nullable: true
          title: Описание
        photo_url:
          type: string
          format: uri
          nullable: true
          title: Ссылка на фото (Firebase)
          maxLength: 200
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        user_role:
          nullable: true
          title: Роль пользователя
          oneOf:
          - $ref: '#/components/schemas/UserRoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        timezone_difference:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Разница во времени
      required:
      - email
      - name
    WebSocketInfo:
      type: object
      description: Serializer for WebSocket connection information.
      properties:
        websocket_url:
          type: string
          description: Base WebSocket URL
        auth_required:
          type: boolean
          description: Whether authentication is required
        token_param:
          type: string
          description: Token parameter name
        connection_format:
          type: string
          description: Connection URL format with placeholders
        message_types:
          type: array
          items:
            type: string
          description: Available message types
      required:
      - auth_required
      - connection_format
      - message_types
      - token_param
      - websocket_url
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
