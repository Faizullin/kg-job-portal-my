# Generated by Django 5.0.2 on 2025-06-19 03:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('questions', '0005_recordaudiosettings_delete_recordaudioquestion'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_correct', models.BooleanField(default=False, help_text='Является ли ответ правильным', verbose_name='Правильный ответ')),
                ('score', models.FloatField(default=0.0, help_text='Количество баллов, полученных за этот ответ', verbose_name='Баллы')),
                ('comment', models.TextField(blank=True, help_text='Комментарий к ответу, например, объяснение ошибки', null=True, verbose_name='Комментарий')),
                ('is_graded', models.BooleanField(default=False, help_text='Был ли ответ оценен преподавателем или автоматически', verbose_name='Оценен')),
                ('is_submitted', models.BooleanField(default=False, help_text='Был ли ответ отправлен на проверку', verbose_name='Отправлен')),
                ('data', models.CharField(blank=True, help_text='Дополнительные данные ответа, например, JSON с ответами на вопросы', max_length=2000, null=True, verbose_name='Данные ответа')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='questions.question', verbose_name='Вопрос')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
    ]
