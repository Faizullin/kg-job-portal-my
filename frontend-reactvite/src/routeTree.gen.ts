/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSplashRouteImport } from './routes/(auth)/splash'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedTasksIndexRouteImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedServiceProvidersIndexRouteImport } from './routes/_authenticated/service-providers/index'
import { Route as AuthenticatedSearchIndexRouteImport } from './routes/_authenticated/search/index'
import { Route as AuthenticatedReviewsIndexRouteImport } from './routes/_authenticated/reviews/index'
import { Route as AuthenticatedPaymentsIndexRouteImport } from './routes/_authenticated/payments/index'
import { Route as AuthenticatedOrdersIndexRouteImport } from './routes/_authenticated/orders/index'
import { Route as AuthenticatedHelpCenterIndexRouteImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedChatsIndexRouteImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedBidsIndexRouteImport } from './routes/_authenticated/bids/index'
import { Route as AuthenticatedAppsIndexRouteImport } from './routes/_authenticated/apps/index'
import { Route as AuthenticatedAnalyticsIndexRouteImport } from './routes/_authenticated/analytics/index'
import { Route as AuthenticatedSettingsUserProfileRouteImport } from './routes/_authenticated/settings/user-profile'
import { Route as AuthenticatedSettingsServiceProviderRouteImport } from './routes/_authenticated/settings/service-provider'
import { Route as AuthenticatedSettingsProfileRouteImport } from './routes/_authenticated/settings/profile'
import { Route as AuthenticatedSettingsNotificationsRouteImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayRouteImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsClientProfileRouteImport } from './routes/_authenticated/settings/client-profile'
import { Route as AuthenticatedSettingsAppearanceRouteImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedServiceProvidersProviderIdRouteImport } from './routes/_authenticated/service-providers/$providerId'
import { Route as AuthenticatedPaymentsInvoicesRouteImport } from './routes/_authenticated/payments/invoices'
import { Route as AuthenticatedOrdersOrderIdRouteImport } from './routes/_authenticated/orders/$orderId'
import { Route as AuthenticatedErrorsErrorRouteImport } from './routes/_authenticated/errors/$error'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSplashRoute = authSplashRouteImport.update({
  id: '/(auth)/splash',
  path: '/splash',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedServiceProvidersIndexRoute =
  AuthenticatedServiceProvidersIndexRouteImport.update({
    id: '/service-providers/',
    path: '/service-providers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSearchIndexRoute =
  AuthenticatedSearchIndexRouteImport.update({
    id: '/search/',
    path: '/search/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedReviewsIndexRoute =
  AuthenticatedReviewsIndexRouteImport.update({
    id: '/reviews/',
    path: '/reviews/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedPaymentsIndexRoute =
  AuthenticatedPaymentsIndexRouteImport.update({
    id: '/payments/',
    path: '/payments/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedOrdersIndexRoute =
  AuthenticatedOrdersIndexRouteImport.update({
    id: '/orders/',
    path: '/orders/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexRouteImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedBidsIndexRoute = AuthenticatedBidsIndexRouteImport.update({
  id: '/bids/',
  path: '/bids/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAnalyticsIndexRoute =
  AuthenticatedAnalyticsIndexRouteImport.update({
    id: '/analytics/',
    path: '/analytics/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsUserProfileRoute =
  AuthenticatedSettingsUserProfileRouteImport.update({
    id: '/user-profile',
    path: '/user-profile',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsServiceProviderRoute =
  AuthenticatedSettingsServiceProviderRouteImport.update({
    id: '/service-provider',
    path: '/service-provider',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsProfileRoute =
  AuthenticatedSettingsProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsClientProfileRoute =
  AuthenticatedSettingsClientProfileRouteImport.update({
    id: '/client-profile',
    path: '/client-profile',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedServiceProvidersProviderIdRoute =
  AuthenticatedServiceProvidersProviderIdRouteImport.update({
    id: '/service-providers/$providerId',
    path: '/service-providers/$providerId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedPaymentsInvoicesRoute =
  AuthenticatedPaymentsInvoicesRouteImport.update({
    id: '/payments/invoices',
    path: '/payments/invoices',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedOrdersOrderIdRoute =
  AuthenticatedOrdersOrderIdRouteImport.update({
    id: '/orders/$orderId',
    path: '/orders/$orderId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedErrorsErrorRoute =
  AuthenticatedErrorsErrorRouteImport.update({
    id: '/errors/$error',
    path: '/errors/$error',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/splash': typeof authSplashRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/orders/$orderId': typeof AuthenticatedOrdersOrderIdRoute
  '/payments/invoices': typeof AuthenticatedPaymentsInvoicesRoute
  '/service-providers/$providerId': typeof AuthenticatedServiceProvidersProviderIdRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/client-profile': typeof AuthenticatedSettingsClientProfileRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/settings/service-provider': typeof AuthenticatedSettingsServiceProviderRoute
  '/settings/user-profile': typeof AuthenticatedSettingsUserProfileRoute
  '/analytics': typeof AuthenticatedAnalyticsIndexRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/bids': typeof AuthenticatedBidsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/orders': typeof AuthenticatedOrdersIndexRoute
  '/payments': typeof AuthenticatedPaymentsIndexRoute
  '/reviews': typeof AuthenticatedReviewsIndexRoute
  '/search': typeof AuthenticatedSearchIndexRoute
  '/service-providers': typeof AuthenticatedServiceProvidersIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
}
export interface FileRoutesByTo {
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/splash': typeof authSplashRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/orders/$orderId': typeof AuthenticatedOrdersOrderIdRoute
  '/payments/invoices': typeof AuthenticatedPaymentsInvoicesRoute
  '/service-providers/$providerId': typeof AuthenticatedServiceProvidersProviderIdRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/client-profile': typeof AuthenticatedSettingsClientProfileRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/settings/service-provider': typeof AuthenticatedSettingsServiceProviderRoute
  '/settings/user-profile': typeof AuthenticatedSettingsUserProfileRoute
  '/analytics': typeof AuthenticatedAnalyticsIndexRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/bids': typeof AuthenticatedBidsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/orders': typeof AuthenticatedOrdersIndexRoute
  '/payments': typeof AuthenticatedPaymentsIndexRoute
  '/reviews': typeof AuthenticatedReviewsIndexRoute
  '/search': typeof AuthenticatedSearchIndexRoute
  '/service-providers': typeof AuthenticatedServiceProvidersIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(auth)/splash': typeof authSplashRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/_authenticated/orders/$orderId': typeof AuthenticatedOrdersOrderIdRoute
  '/_authenticated/payments/invoices': typeof AuthenticatedPaymentsInvoicesRoute
  '/_authenticated/service-providers/$providerId': typeof AuthenticatedServiceProvidersProviderIdRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/client-profile': typeof AuthenticatedSettingsClientProfileRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/_authenticated/settings/service-provider': typeof AuthenticatedSettingsServiceProviderRoute
  '/_authenticated/settings/user-profile': typeof AuthenticatedSettingsUserProfileRoute
  '/_authenticated/analytics/': typeof AuthenticatedAnalyticsIndexRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/bids/': typeof AuthenticatedBidsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/orders/': typeof AuthenticatedOrdersIndexRoute
  '/_authenticated/payments/': typeof AuthenticatedPaymentsIndexRoute
  '/_authenticated/reviews/': typeof AuthenticatedReviewsIndexRoute
  '/_authenticated/search/': typeof AuthenticatedSearchIndexRoute
  '/_authenticated/service-providers/': typeof AuthenticatedServiceProvidersIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/settings'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/splash'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/errors/$error'
    | '/orders/$orderId'
    | '/payments/invoices'
    | '/service-providers/$providerId'
    | '/settings/appearance'
    | '/settings/client-profile'
    | '/settings/display'
    | '/settings/notifications'
    | '/settings/profile'
    | '/settings/service-provider'
    | '/settings/user-profile'
    | '/analytics'
    | '/apps'
    | '/bids'
    | '/chats'
    | '/help-center'
    | '/orders'
    | '/payments'
    | '/reviews'
    | '/search'
    | '/service-providers'
    | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/splash'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/errors/$error'
    | '/orders/$orderId'
    | '/payments/invoices'
    | '/service-providers/$providerId'
    | '/settings/appearance'
    | '/settings/client-profile'
    | '/settings/display'
    | '/settings/notifications'
    | '/settings/profile'
    | '/settings/service-provider'
    | '/settings/user-profile'
    | '/analytics'
    | '/apps'
    | '/bids'
    | '/chats'
    | '/help-center'
    | '/orders'
    | '/payments'
    | '/reviews'
    | '/search'
    | '/service-providers'
    | '/tasks'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/(auth)/splash'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/errors/$error'
    | '/_authenticated/orders/$orderId'
    | '/_authenticated/payments/invoices'
    | '/_authenticated/service-providers/$providerId'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/client-profile'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/settings/profile'
    | '/_authenticated/settings/service-provider'
    | '/_authenticated/settings/user-profile'
    | '/_authenticated/analytics/'
    | '/_authenticated/apps/'
    | '/_authenticated/bids/'
    | '/_authenticated/chats/'
    | '/_authenticated/help-center/'
    | '/_authenticated/orders/'
    | '/_authenticated/payments/'
    | '/_authenticated/reviews/'
    | '/_authenticated/search/'
    | '/_authenticated/service-providers/'
    | '/_authenticated/tasks/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
  authSplashRoute: typeof authSplashRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/splash': {
      id: '/(auth)/splash'
      path: '/splash'
      fullPath: '/splash'
      preLoaderRoute: typeof authSplashRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/service-providers/': {
      id: '/_authenticated/service-providers/'
      path: '/service-providers'
      fullPath: '/service-providers'
      preLoaderRoute: typeof AuthenticatedServiceProvidersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/search/': {
      id: '/_authenticated/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AuthenticatedSearchIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/reviews/': {
      id: '/_authenticated/reviews/'
      path: '/reviews'
      fullPath: '/reviews'
      preLoaderRoute: typeof AuthenticatedReviewsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/payments/': {
      id: '/_authenticated/payments/'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof AuthenticatedPaymentsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/orders/': {
      id: '/_authenticated/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof AuthenticatedOrdersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/bids/': {
      id: '/_authenticated/bids/'
      path: '/bids'
      fullPath: '/bids'
      preLoaderRoute: typeof AuthenticatedBidsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/analytics/': {
      id: '/_authenticated/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AuthenticatedAnalyticsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/user-profile': {
      id: '/_authenticated/settings/user-profile'
      path: '/user-profile'
      fullPath: '/settings/user-profile'
      preLoaderRoute: typeof AuthenticatedSettingsUserProfileRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/service-provider': {
      id: '/_authenticated/settings/service-provider'
      path: '/service-provider'
      fullPath: '/settings/service-provider'
      preLoaderRoute: typeof AuthenticatedSettingsServiceProviderRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/profile': {
      id: '/_authenticated/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AuthenticatedSettingsProfileRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/client-profile': {
      id: '/_authenticated/settings/client-profile'
      path: '/client-profile'
      fullPath: '/settings/client-profile'
      preLoaderRoute: typeof AuthenticatedSettingsClientProfileRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/service-providers/$providerId': {
      id: '/_authenticated/service-providers/$providerId'
      path: '/service-providers/$providerId'
      fullPath: '/service-providers/$providerId'
      preLoaderRoute: typeof AuthenticatedServiceProvidersProviderIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/payments/invoices': {
      id: '/_authenticated/payments/invoices'
      path: '/payments/invoices'
      fullPath: '/payments/invoices'
      preLoaderRoute: typeof AuthenticatedPaymentsInvoicesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/orders/$orderId': {
      id: '/_authenticated/orders/$orderId'
      path: '/orders/$orderId'
      fullPath: '/orders/$orderId'
      preLoaderRoute: typeof AuthenticatedOrdersOrderIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/errors/$error': {
      id: '/_authenticated/errors/$error'
      path: '/errors/$error'
      fullPath: '/errors/$error'
      preLoaderRoute: typeof AuthenticatedErrorsErrorRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsClientProfileRoute: typeof AuthenticatedSettingsClientProfileRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsProfileRoute: typeof AuthenticatedSettingsProfileRoute
  AuthenticatedSettingsServiceProviderRoute: typeof AuthenticatedSettingsServiceProviderRoute
  AuthenticatedSettingsUserProfileRoute: typeof AuthenticatedSettingsUserProfileRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsClientProfileRoute:
      AuthenticatedSettingsClientProfileRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsProfileRoute: AuthenticatedSettingsProfileRoute,
    AuthenticatedSettingsServiceProviderRoute:
      AuthenticatedSettingsServiceProviderRoute,
    AuthenticatedSettingsUserProfileRoute:
      AuthenticatedSettingsUserProfileRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedErrorsErrorRoute: typeof AuthenticatedErrorsErrorRoute
  AuthenticatedOrdersOrderIdRoute: typeof AuthenticatedOrdersOrderIdRoute
  AuthenticatedPaymentsInvoicesRoute: typeof AuthenticatedPaymentsInvoicesRoute
  AuthenticatedServiceProvidersProviderIdRoute: typeof AuthenticatedServiceProvidersProviderIdRoute
  AuthenticatedAnalyticsIndexRoute: typeof AuthenticatedAnalyticsIndexRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedBidsIndexRoute: typeof AuthenticatedBidsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedOrdersIndexRoute: typeof AuthenticatedOrdersIndexRoute
  AuthenticatedPaymentsIndexRoute: typeof AuthenticatedPaymentsIndexRoute
  AuthenticatedReviewsIndexRoute: typeof AuthenticatedReviewsIndexRoute
  AuthenticatedSearchIndexRoute: typeof AuthenticatedSearchIndexRoute
  AuthenticatedServiceProvidersIndexRoute: typeof AuthenticatedServiceProvidersIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedErrorsErrorRoute: AuthenticatedErrorsErrorRoute,
  AuthenticatedOrdersOrderIdRoute: AuthenticatedOrdersOrderIdRoute,
  AuthenticatedPaymentsInvoicesRoute: AuthenticatedPaymentsInvoicesRoute,
  AuthenticatedServiceProvidersProviderIdRoute:
    AuthenticatedServiceProvidersProviderIdRoute,
  AuthenticatedAnalyticsIndexRoute: AuthenticatedAnalyticsIndexRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedBidsIndexRoute: AuthenticatedBidsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedOrdersIndexRoute: AuthenticatedOrdersIndexRoute,
  AuthenticatedPaymentsIndexRoute: AuthenticatedPaymentsIndexRoute,
  AuthenticatedReviewsIndexRoute: AuthenticatedReviewsIndexRoute,
  AuthenticatedSearchIndexRoute: AuthenticatedSearchIndexRoute,
  AuthenticatedServiceProvidersIndexRoute:
    AuthenticatedServiceProvidersIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
  authSplashRoute: authSplashRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
