/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSplashRouteImport } from './routes/(auth)/splash'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedTasksIndexRouteImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedSearchIndexRouteImport } from './routes/_authenticated/search/index'
import { Route as AuthenticatedReviewsIndexRouteImport } from './routes/_authenticated/reviews/index'
import { Route as AuthenticatedPaymentsIndexRouteImport } from './routes/_authenticated/payments/index'
import { Route as AuthenticatedJobsIndexRouteImport } from './routes/_authenticated/jobs/index'
import { Route as AuthenticatedHelpCenterIndexRouteImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedChatsIndexRouteImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedAppsIndexRouteImport } from './routes/_authenticated/apps/index'
import { Route as AuthenticatedAnalyticsIndexRouteImport } from './routes/_authenticated/analytics/index'
import { Route as AuthenticatedSettingsUserProfileRouteImport } from './routes/_authenticated/settings/user-profile'
import { Route as AuthenticatedSettingsProfileRouteImport } from './routes/_authenticated/settings/profile'
import { Route as AuthenticatedSettingsNotificationsRouteImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsMasterRouteImport } from './routes/_authenticated/settings/master'
import { Route as AuthenticatedSettingsDisplayRouteImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsClientProfileRouteImport } from './routes/_authenticated/settings/client-profile'
import { Route as AuthenticatedSettingsAppearanceRouteImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedPaymentsInvoicesRouteImport } from './routes/_authenticated/payments/invoices'
import { Route as AuthenticatedJobsJobIdRouteImport } from './routes/_authenticated/jobs/$jobId'
import { Route as AuthenticatedErrorsErrorRouteImport } from './routes/_authenticated/errors/$error'
import { Route as AuthenticatedCoreSystemSettingsRouteImport } from './routes/_authenticated/core/system-settings'
import { Route as AuthenticatedCoreSupportFaqRouteImport } from './routes/_authenticated/core/support-faq'
import { Route as AuthenticatedCoreServiceSubcategoriesRouteImport } from './routes/_authenticated/core/service-subcategories'
import { Route as AuthenticatedCoreServiceCategoriesRouteImport } from './routes/_authenticated/core/service-categories'
import { Route as AuthenticatedCoreServiceAreasRouteImport } from './routes/_authenticated/core/service-areas'
import { Route as AuthenticatedAppMasterRouteImport } from './routes/_authenticated/app/master'
import { Route as AuthenticatedAppClientRouteImport } from './routes/_authenticated/app/client'
import { Route as AuthenticatedAppMastersIndexRouteImport } from './routes/_authenticated/app/masters/index'
import { Route as AuthenticatedAppMastersProviderIdRouteImport } from './routes/_authenticated/app/masters/$providerId'
import { Route as AuthenticatedAppJobsCreateIndexRouteImport } from './routes/_authenticated/app/jobs/create/index'
import { Route as AuthenticatedAppJobsCreateServiceRouteImport } from './routes/_authenticated/app/jobs/create/service'
import { Route as AuthenticatedAppJobsCreateReviewRouteImport } from './routes/_authenticated/app/jobs/create/review'
import { Route as AuthenticatedAppJobsCreateDatetimeRouteImport } from './routes/_authenticated/app/jobs/create/datetime'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSplashRoute = authSplashRouteImport.update({
  id: '/(auth)/splash',
  path: '/splash',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSearchIndexRoute =
  AuthenticatedSearchIndexRouteImport.update({
    id: '/search/',
    path: '/search/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedReviewsIndexRoute =
  AuthenticatedReviewsIndexRouteImport.update({
    id: '/reviews/',
    path: '/reviews/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedPaymentsIndexRoute =
  AuthenticatedPaymentsIndexRouteImport.update({
    id: '/payments/',
    path: '/payments/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedJobsIndexRoute = AuthenticatedJobsIndexRouteImport.update({
  id: '/jobs/',
  path: '/jobs/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexRouteImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAnalyticsIndexRoute =
  AuthenticatedAnalyticsIndexRouteImport.update({
    id: '/analytics/',
    path: '/analytics/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsUserProfileRoute =
  AuthenticatedSettingsUserProfileRouteImport.update({
    id: '/user-profile',
    path: '/user-profile',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsProfileRoute =
  AuthenticatedSettingsProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsMasterRoute =
  AuthenticatedSettingsMasterRouteImport.update({
    id: '/master',
    path: '/master',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsClientProfileRoute =
  AuthenticatedSettingsClientProfileRouteImport.update({
    id: '/client-profile',
    path: '/client-profile',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedPaymentsInvoicesRoute =
  AuthenticatedPaymentsInvoicesRouteImport.update({
    id: '/payments/invoices',
    path: '/payments/invoices',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedJobsJobIdRoute = AuthenticatedJobsJobIdRouteImport.update({
  id: '/jobs/$jobId',
  path: '/jobs/$jobId',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedErrorsErrorRoute =
  AuthenticatedErrorsErrorRouteImport.update({
    id: '/errors/$error',
    path: '/errors/$error',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedCoreSystemSettingsRoute =
  AuthenticatedCoreSystemSettingsRouteImport.update({
    id: '/core/system-settings',
    path: '/core/system-settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedCoreSupportFaqRoute =
  AuthenticatedCoreSupportFaqRouteImport.update({
    id: '/core/support-faq',
    path: '/core/support-faq',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedCoreServiceSubcategoriesRoute =
  AuthenticatedCoreServiceSubcategoriesRouteImport.update({
    id: '/core/service-subcategories',
    path: '/core/service-subcategories',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedCoreServiceCategoriesRoute =
  AuthenticatedCoreServiceCategoriesRouteImport.update({
    id: '/core/service-categories',
    path: '/core/service-categories',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedCoreServiceAreasRoute =
  AuthenticatedCoreServiceAreasRouteImport.update({
    id: '/core/service-areas',
    path: '/core/service-areas',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAppMasterRoute = AuthenticatedAppMasterRouteImport.update({
  id: '/app/master',
  path: '/app/master',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAppClientRoute = AuthenticatedAppClientRouteImport.update({
  id: '/app/client',
  path: '/app/client',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAppMastersIndexRoute =
  AuthenticatedAppMastersIndexRouteImport.update({
    id: '/app/masters/',
    path: '/app/masters/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAppMastersProviderIdRoute =
  AuthenticatedAppMastersProviderIdRouteImport.update({
    id: '/app/masters/$providerId',
    path: '/app/masters/$providerId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAppJobsCreateIndexRoute =
  AuthenticatedAppJobsCreateIndexRouteImport.update({
    id: '/app/jobs/create/',
    path: '/app/jobs/create/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAppJobsCreateServiceRoute =
  AuthenticatedAppJobsCreateServiceRouteImport.update({
    id: '/app/jobs/create/service',
    path: '/app/jobs/create/service',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAppJobsCreateReviewRoute =
  AuthenticatedAppJobsCreateReviewRouteImport.update({
    id: '/app/jobs/create/review',
    path: '/app/jobs/create/review',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAppJobsCreateDatetimeRoute =
  AuthenticatedAppJobsCreateDatetimeRouteImport.update({
    id: '/app/jobs/create/datetime',
    path: '/app/jobs/create/datetime',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/splash': typeof authSplashRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/app/client': typeof AuthenticatedAppClientRoute
  '/app/master': typeof AuthenticatedAppMasterRoute
  '/core/service-areas': typeof AuthenticatedCoreServiceAreasRoute
  '/core/service-categories': typeof AuthenticatedCoreServiceCategoriesRoute
  '/core/service-subcategories': typeof AuthenticatedCoreServiceSubcategoriesRoute
  '/core/support-faq': typeof AuthenticatedCoreSupportFaqRoute
  '/core/system-settings': typeof AuthenticatedCoreSystemSettingsRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/jobs/$jobId': typeof AuthenticatedJobsJobIdRoute
  '/payments/invoices': typeof AuthenticatedPaymentsInvoicesRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/client-profile': typeof AuthenticatedSettingsClientProfileRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/master': typeof AuthenticatedSettingsMasterRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/settings/user-profile': typeof AuthenticatedSettingsUserProfileRoute
  '/analytics': typeof AuthenticatedAnalyticsIndexRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/jobs': typeof AuthenticatedJobsIndexRoute
  '/payments': typeof AuthenticatedPaymentsIndexRoute
  '/reviews': typeof AuthenticatedReviewsIndexRoute
  '/search': typeof AuthenticatedSearchIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/app/masters/$providerId': typeof AuthenticatedAppMastersProviderIdRoute
  '/app/masters': typeof AuthenticatedAppMastersIndexRoute
  '/app/jobs/create/datetime': typeof AuthenticatedAppJobsCreateDatetimeRoute
  '/app/jobs/create/review': typeof AuthenticatedAppJobsCreateReviewRoute
  '/app/jobs/create/service': typeof AuthenticatedAppJobsCreateServiceRoute
  '/app/jobs/create': typeof AuthenticatedAppJobsCreateIndexRoute
}
export interface FileRoutesByTo {
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/splash': typeof authSplashRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/app/client': typeof AuthenticatedAppClientRoute
  '/app/master': typeof AuthenticatedAppMasterRoute
  '/core/service-areas': typeof AuthenticatedCoreServiceAreasRoute
  '/core/service-categories': typeof AuthenticatedCoreServiceCategoriesRoute
  '/core/service-subcategories': typeof AuthenticatedCoreServiceSubcategoriesRoute
  '/core/support-faq': typeof AuthenticatedCoreSupportFaqRoute
  '/core/system-settings': typeof AuthenticatedCoreSystemSettingsRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/jobs/$jobId': typeof AuthenticatedJobsJobIdRoute
  '/payments/invoices': typeof AuthenticatedPaymentsInvoicesRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/client-profile': typeof AuthenticatedSettingsClientProfileRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/master': typeof AuthenticatedSettingsMasterRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/settings/user-profile': typeof AuthenticatedSettingsUserProfileRoute
  '/analytics': typeof AuthenticatedAnalyticsIndexRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/jobs': typeof AuthenticatedJobsIndexRoute
  '/payments': typeof AuthenticatedPaymentsIndexRoute
  '/reviews': typeof AuthenticatedReviewsIndexRoute
  '/search': typeof AuthenticatedSearchIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/app/masters/$providerId': typeof AuthenticatedAppMastersProviderIdRoute
  '/app/masters': typeof AuthenticatedAppMastersIndexRoute
  '/app/jobs/create/datetime': typeof AuthenticatedAppJobsCreateDatetimeRoute
  '/app/jobs/create/review': typeof AuthenticatedAppJobsCreateReviewRoute
  '/app/jobs/create/service': typeof AuthenticatedAppJobsCreateServiceRoute
  '/app/jobs/create': typeof AuthenticatedAppJobsCreateIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(auth)/splash': typeof authSplashRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/app/client': typeof AuthenticatedAppClientRoute
  '/_authenticated/app/master': typeof AuthenticatedAppMasterRoute
  '/_authenticated/core/service-areas': typeof AuthenticatedCoreServiceAreasRoute
  '/_authenticated/core/service-categories': typeof AuthenticatedCoreServiceCategoriesRoute
  '/_authenticated/core/service-subcategories': typeof AuthenticatedCoreServiceSubcategoriesRoute
  '/_authenticated/core/support-faq': typeof AuthenticatedCoreSupportFaqRoute
  '/_authenticated/core/system-settings': typeof AuthenticatedCoreSystemSettingsRoute
  '/_authenticated/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/_authenticated/jobs/$jobId': typeof AuthenticatedJobsJobIdRoute
  '/_authenticated/payments/invoices': typeof AuthenticatedPaymentsInvoicesRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/client-profile': typeof AuthenticatedSettingsClientProfileRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/master': typeof AuthenticatedSettingsMasterRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/settings/profile': typeof AuthenticatedSettingsProfileRoute
  '/_authenticated/settings/user-profile': typeof AuthenticatedSettingsUserProfileRoute
  '/_authenticated/analytics/': typeof AuthenticatedAnalyticsIndexRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/jobs/': typeof AuthenticatedJobsIndexRoute
  '/_authenticated/payments/': typeof AuthenticatedPaymentsIndexRoute
  '/_authenticated/reviews/': typeof AuthenticatedReviewsIndexRoute
  '/_authenticated/search/': typeof AuthenticatedSearchIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/app/masters/$providerId': typeof AuthenticatedAppMastersProviderIdRoute
  '/_authenticated/app/masters/': typeof AuthenticatedAppMastersIndexRoute
  '/_authenticated/app/jobs/create/datetime': typeof AuthenticatedAppJobsCreateDatetimeRoute
  '/_authenticated/app/jobs/create/review': typeof AuthenticatedAppJobsCreateReviewRoute
  '/_authenticated/app/jobs/create/service': typeof AuthenticatedAppJobsCreateServiceRoute
  '/_authenticated/app/jobs/create/': typeof AuthenticatedAppJobsCreateIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/settings'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/splash'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/app/client'
    | '/app/master'
    | '/core/service-areas'
    | '/core/service-categories'
    | '/core/service-subcategories'
    | '/core/support-faq'
    | '/core/system-settings'
    | '/errors/$error'
    | '/jobs/$jobId'
    | '/payments/invoices'
    | '/settings/appearance'
    | '/settings/client-profile'
    | '/settings/display'
    | '/settings/master'
    | '/settings/notifications'
    | '/settings/profile'
    | '/settings/user-profile'
    | '/analytics'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/jobs'
    | '/payments'
    | '/reviews'
    | '/search'
    | '/tasks'
    | '/app/masters/$providerId'
    | '/app/masters'
    | '/app/jobs/create/datetime'
    | '/app/jobs/create/review'
    | '/app/jobs/create/service'
    | '/app/jobs/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/splash'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/app/client'
    | '/app/master'
    | '/core/service-areas'
    | '/core/service-categories'
    | '/core/service-subcategories'
    | '/core/support-faq'
    | '/core/system-settings'
    | '/errors/$error'
    | '/jobs/$jobId'
    | '/payments/invoices'
    | '/settings/appearance'
    | '/settings/client-profile'
    | '/settings/display'
    | '/settings/master'
    | '/settings/notifications'
    | '/settings/profile'
    | '/settings/user-profile'
    | '/analytics'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/jobs'
    | '/payments'
    | '/reviews'
    | '/search'
    | '/tasks'
    | '/app/masters/$providerId'
    | '/app/masters'
    | '/app/jobs/create/datetime'
    | '/app/jobs/create/review'
    | '/app/jobs/create/service'
    | '/app/jobs/create'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/(auth)/splash'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/app/client'
    | '/_authenticated/app/master'
    | '/_authenticated/core/service-areas'
    | '/_authenticated/core/service-categories'
    | '/_authenticated/core/service-subcategories'
    | '/_authenticated/core/support-faq'
    | '/_authenticated/core/system-settings'
    | '/_authenticated/errors/$error'
    | '/_authenticated/jobs/$jobId'
    | '/_authenticated/payments/invoices'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/client-profile'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/master'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/settings/profile'
    | '/_authenticated/settings/user-profile'
    | '/_authenticated/analytics/'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/help-center/'
    | '/_authenticated/jobs/'
    | '/_authenticated/payments/'
    | '/_authenticated/reviews/'
    | '/_authenticated/search/'
    | '/_authenticated/tasks/'
    | '/_authenticated/app/masters/$providerId'
    | '/_authenticated/app/masters/'
    | '/_authenticated/app/jobs/create/datetime'
    | '/_authenticated/app/jobs/create/review'
    | '/_authenticated/app/jobs/create/service'
    | '/_authenticated/app/jobs/create/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
  authSplashRoute: typeof authSplashRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/splash': {
      id: '/(auth)/splash'
      path: '/splash'
      fullPath: '/splash'
      preLoaderRoute: typeof authSplashRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/search/': {
      id: '/_authenticated/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AuthenticatedSearchIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/reviews/': {
      id: '/_authenticated/reviews/'
      path: '/reviews'
      fullPath: '/reviews'
      preLoaderRoute: typeof AuthenticatedReviewsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/payments/': {
      id: '/_authenticated/payments/'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof AuthenticatedPaymentsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/jobs/': {
      id: '/_authenticated/jobs/'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof AuthenticatedJobsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/analytics/': {
      id: '/_authenticated/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AuthenticatedAnalyticsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/user-profile': {
      id: '/_authenticated/settings/user-profile'
      path: '/user-profile'
      fullPath: '/settings/user-profile'
      preLoaderRoute: typeof AuthenticatedSettingsUserProfileRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/profile': {
      id: '/_authenticated/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AuthenticatedSettingsProfileRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/master': {
      id: '/_authenticated/settings/master'
      path: '/master'
      fullPath: '/settings/master'
      preLoaderRoute: typeof AuthenticatedSettingsMasterRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/client-profile': {
      id: '/_authenticated/settings/client-profile'
      path: '/client-profile'
      fullPath: '/settings/client-profile'
      preLoaderRoute: typeof AuthenticatedSettingsClientProfileRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/payments/invoices': {
      id: '/_authenticated/payments/invoices'
      path: '/payments/invoices'
      fullPath: '/payments/invoices'
      preLoaderRoute: typeof AuthenticatedPaymentsInvoicesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/jobs/$jobId': {
      id: '/_authenticated/jobs/$jobId'
      path: '/jobs/$jobId'
      fullPath: '/jobs/$jobId'
      preLoaderRoute: typeof AuthenticatedJobsJobIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/errors/$error': {
      id: '/_authenticated/errors/$error'
      path: '/errors/$error'
      fullPath: '/errors/$error'
      preLoaderRoute: typeof AuthenticatedErrorsErrorRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/core/system-settings': {
      id: '/_authenticated/core/system-settings'
      path: '/core/system-settings'
      fullPath: '/core/system-settings'
      preLoaderRoute: typeof AuthenticatedCoreSystemSettingsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/core/support-faq': {
      id: '/_authenticated/core/support-faq'
      path: '/core/support-faq'
      fullPath: '/core/support-faq'
      preLoaderRoute: typeof AuthenticatedCoreSupportFaqRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/core/service-subcategories': {
      id: '/_authenticated/core/service-subcategories'
      path: '/core/service-subcategories'
      fullPath: '/core/service-subcategories'
      preLoaderRoute: typeof AuthenticatedCoreServiceSubcategoriesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/core/service-categories': {
      id: '/_authenticated/core/service-categories'
      path: '/core/service-categories'
      fullPath: '/core/service-categories'
      preLoaderRoute: typeof AuthenticatedCoreServiceCategoriesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/core/service-areas': {
      id: '/_authenticated/core/service-areas'
      path: '/core/service-areas'
      fullPath: '/core/service-areas'
      preLoaderRoute: typeof AuthenticatedCoreServiceAreasRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/app/master': {
      id: '/_authenticated/app/master'
      path: '/app/master'
      fullPath: '/app/master'
      preLoaderRoute: typeof AuthenticatedAppMasterRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/app/client': {
      id: '/_authenticated/app/client'
      path: '/app/client'
      fullPath: '/app/client'
      preLoaderRoute: typeof AuthenticatedAppClientRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/app/masters/': {
      id: '/_authenticated/app/masters/'
      path: '/app/masters'
      fullPath: '/app/masters'
      preLoaderRoute: typeof AuthenticatedAppMastersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/app/masters/$providerId': {
      id: '/_authenticated/app/masters/$providerId'
      path: '/app/masters/$providerId'
      fullPath: '/app/masters/$providerId'
      preLoaderRoute: typeof AuthenticatedAppMastersProviderIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/app/jobs/create/': {
      id: '/_authenticated/app/jobs/create/'
      path: '/app/jobs/create'
      fullPath: '/app/jobs/create'
      preLoaderRoute: typeof AuthenticatedAppJobsCreateIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/app/jobs/create/service': {
      id: '/_authenticated/app/jobs/create/service'
      path: '/app/jobs/create/service'
      fullPath: '/app/jobs/create/service'
      preLoaderRoute: typeof AuthenticatedAppJobsCreateServiceRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/app/jobs/create/review': {
      id: '/_authenticated/app/jobs/create/review'
      path: '/app/jobs/create/review'
      fullPath: '/app/jobs/create/review'
      preLoaderRoute: typeof AuthenticatedAppJobsCreateReviewRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/app/jobs/create/datetime': {
      id: '/_authenticated/app/jobs/create/datetime'
      path: '/app/jobs/create/datetime'
      fullPath: '/app/jobs/create/datetime'
      preLoaderRoute: typeof AuthenticatedAppJobsCreateDatetimeRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsClientProfileRoute: typeof AuthenticatedSettingsClientProfileRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsMasterRoute: typeof AuthenticatedSettingsMasterRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsProfileRoute: typeof AuthenticatedSettingsProfileRoute
  AuthenticatedSettingsUserProfileRoute: typeof AuthenticatedSettingsUserProfileRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsClientProfileRoute:
      AuthenticatedSettingsClientProfileRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsMasterRoute: AuthenticatedSettingsMasterRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsProfileRoute: AuthenticatedSettingsProfileRoute,
    AuthenticatedSettingsUserProfileRoute:
      AuthenticatedSettingsUserProfileRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAppClientRoute: typeof AuthenticatedAppClientRoute
  AuthenticatedAppMasterRoute: typeof AuthenticatedAppMasterRoute
  AuthenticatedCoreServiceAreasRoute: typeof AuthenticatedCoreServiceAreasRoute
  AuthenticatedCoreServiceCategoriesRoute: typeof AuthenticatedCoreServiceCategoriesRoute
  AuthenticatedCoreServiceSubcategoriesRoute: typeof AuthenticatedCoreServiceSubcategoriesRoute
  AuthenticatedCoreSupportFaqRoute: typeof AuthenticatedCoreSupportFaqRoute
  AuthenticatedCoreSystemSettingsRoute: typeof AuthenticatedCoreSystemSettingsRoute
  AuthenticatedErrorsErrorRoute: typeof AuthenticatedErrorsErrorRoute
  AuthenticatedJobsJobIdRoute: typeof AuthenticatedJobsJobIdRoute
  AuthenticatedPaymentsInvoicesRoute: typeof AuthenticatedPaymentsInvoicesRoute
  AuthenticatedAnalyticsIndexRoute: typeof AuthenticatedAnalyticsIndexRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedJobsIndexRoute: typeof AuthenticatedJobsIndexRoute
  AuthenticatedPaymentsIndexRoute: typeof AuthenticatedPaymentsIndexRoute
  AuthenticatedReviewsIndexRoute: typeof AuthenticatedReviewsIndexRoute
  AuthenticatedSearchIndexRoute: typeof AuthenticatedSearchIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
  AuthenticatedAppMastersProviderIdRoute: typeof AuthenticatedAppMastersProviderIdRoute
  AuthenticatedAppMastersIndexRoute: typeof AuthenticatedAppMastersIndexRoute
  AuthenticatedAppJobsCreateDatetimeRoute: typeof AuthenticatedAppJobsCreateDatetimeRoute
  AuthenticatedAppJobsCreateReviewRoute: typeof AuthenticatedAppJobsCreateReviewRoute
  AuthenticatedAppJobsCreateServiceRoute: typeof AuthenticatedAppJobsCreateServiceRoute
  AuthenticatedAppJobsCreateIndexRoute: typeof AuthenticatedAppJobsCreateIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAppClientRoute: AuthenticatedAppClientRoute,
  AuthenticatedAppMasterRoute: AuthenticatedAppMasterRoute,
  AuthenticatedCoreServiceAreasRoute: AuthenticatedCoreServiceAreasRoute,
  AuthenticatedCoreServiceCategoriesRoute:
    AuthenticatedCoreServiceCategoriesRoute,
  AuthenticatedCoreServiceSubcategoriesRoute:
    AuthenticatedCoreServiceSubcategoriesRoute,
  AuthenticatedCoreSupportFaqRoute: AuthenticatedCoreSupportFaqRoute,
  AuthenticatedCoreSystemSettingsRoute: AuthenticatedCoreSystemSettingsRoute,
  AuthenticatedErrorsErrorRoute: AuthenticatedErrorsErrorRoute,
  AuthenticatedJobsJobIdRoute: AuthenticatedJobsJobIdRoute,
  AuthenticatedPaymentsInvoicesRoute: AuthenticatedPaymentsInvoicesRoute,
  AuthenticatedAnalyticsIndexRoute: AuthenticatedAnalyticsIndexRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedJobsIndexRoute: AuthenticatedJobsIndexRoute,
  AuthenticatedPaymentsIndexRoute: AuthenticatedPaymentsIndexRoute,
  AuthenticatedReviewsIndexRoute: AuthenticatedReviewsIndexRoute,
  AuthenticatedSearchIndexRoute: AuthenticatedSearchIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
  AuthenticatedAppMastersProviderIdRoute:
    AuthenticatedAppMastersProviderIdRoute,
  AuthenticatedAppMastersIndexRoute: AuthenticatedAppMastersIndexRoute,
  AuthenticatedAppJobsCreateDatetimeRoute:
    AuthenticatedAppJobsCreateDatetimeRoute,
  AuthenticatedAppJobsCreateReviewRoute: AuthenticatedAppJobsCreateReviewRoute,
  AuthenticatedAppJobsCreateServiceRoute:
    AuthenticatedAppJobsCreateServiceRoute,
  AuthenticatedAppJobsCreateIndexRoute: AuthenticatedAppJobsCreateIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
  authSplashRoute: authSplashRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
