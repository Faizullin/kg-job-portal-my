{
	"info": {
		"_postman_id": "kg-job-portal-api",
		"name": "KG Job Portal API - Complete User Journey",
		"description": "# KG Job Portal API Documentation\n\n## Overview\nThis collection provides comprehensive API testing for the KG Job Portal platform, organized by user journey from registration to main features.\n\n## Features\n- üîê Firebase Authentication\n- üë§ User Profile Management\n- üë• Client & Provider Profiles\n- üìù Order Management\n- üí∞ Bidding System\n- üí¨ Real-time Chat\n- üîî Notifications\n- üí≥ Payment Processing\n- ‚≠ê Reviews & Ratings\n- üîç Search & Discovery\n- üìä Analytics & Dashboard\n\n## Getting Started\n1. Set up environment variables\n2. Start with Firebase Authentication\n3. Follow the user journey folders\n4. Use sample request bodies provided\n\n## Authentication\nAll authenticated endpoints require the `Authorization` header:\n```\nAuthorization: Token {{auth_token}}\n```\n\n## Base URL\nDefault: `http://localhost:8000`\n\n## Support\nFor detailed API documentation, visit `/api/schema/swagger-ui/` or `/api/schema/redoc/`",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "kg-job-portal"
	},
	"item": [
		{
			"name": "üîê Authentication & Registration",
			"description": "# Authentication & Registration\n\nThis folder contains endpoints for user authentication and registration using Firebase.\n\n## Flow\n1. **Firebase Authentication**: Authenticate with Firebase ID token\n2. **Get Auth Token**: Copy the returned token to `auth_token` variable\n3. **Use Token**: Include token in Authorization header for all subsequent requests\n\n## Firebase Setup\n- Get Firebase ID token from your Firebase client\n- Set `firebase_id_token` environment variable\n- Call Firebase Authentication endpoint\n\n## Token Management\n- Token is returned in response after successful authentication\n- Copy token to `auth_token` environment variable\n- Token format: `Authorization: Token <your_token>`",
			"item": [
				{
					"name": "Firebase Authentication",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id_token\": \"{{firebase_id_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/firebase/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "firebase", ""]
						},
						"description": "# Firebase Authentication\n\nAuthenticate user with Firebase ID token or register new user if verified.\n\n## Purpose\n- **Login**: Authenticate existing users\n- **Registration**: Create new user accounts\n- **Token Exchange**: Exchange Firebase token for Django auth token\n\n## Request Body\n```json\n{\n    \"id_token\": \"your_firebase_id_token_here\"\n}\n```\n\n## Response\n- **200 OK**: Authentication successful\n- **201 Created**: New user registered\n- **400 Bad Request**: Invalid token\n- **401 Unauthorized**: Token verification failed\n\n## Next Steps\n1. Copy the returned `token` from response\n2. Set it as `auth_token` environment variable\n3. Use in Authorization header for all subsequent requests\n\n## Example Response\n```json\n{\n    \"token\": \"abc123def456...\",\n    \"user\": {\n        \"id\": 1,\n        \"email\": \"user@example.com\",\n        \"name\": \"John Doe\"\n    }\n}\n```"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/logout/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "logout", ""]
						},
						"description": "# User Logout\n\nLogout user and invalidate authentication token.\n\n## Purpose\n- **Session Termination**: End user session\n- **Token Invalidation**: Invalidate current auth token\n- **Security**: Ensure secure logout\n\n## Authentication\nRequires valid authentication token in Authorization header.\n\n## Response\n- **200 OK**: Logout successful\n- **401 Unauthorized**: Invalid or expired token\n\n## Example Response\n```json\n{\n    \"message\": \"Successfully logged out\",\n    \"timestamp\": \"2024-01-15T10:30:00Z\"\n}\n```\n\n## Note\nAfter logout, the current `auth_token` will be invalidated and cannot be used for further requests."
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user login and logout"
		},
		{
			"name": "üë§ User Profile Setup",
			"description": "# User Profile Setup\n\nThis folder contains endpoints for managing user profile information.\n\n## Purpose\n- **Profile Management**: Get and update user profile data\n- **Image Upload**: Upload and manage profile photos\n- **Account Information**: Manage basic account details\n\n## Flow\n1. **Get Profile**: Retrieve current user profile\n2. **Update Profile**: Update profile information\n3. **Upload Image**: Upload profile photo\n4. **Advanced Profile**: Get combined account and job portal data\n\n## Authentication\nAll endpoints require valid authentication token.\n\n## Profile Fields\n- `name`: User's display name\n- `description`: User bio/description\n- `photo_url`: Profile image URL\n- `email`: User email (read-only)\n- `phone_number`: Contact number\n- `address`: Physical address\n\n## Image Upload\n- Supports multiple image formats (JPEG, PNG, WebP)\n- Maximum file size: 5MB\n- Images are automatically resized and optimized",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/profile/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "profile", ""]
						},
						"description": "# Get User Profile\n\nRetrieve current user's profile information.\n\n## Purpose\n- **Profile Data**: Get complete user profile\n- **Account Status**: Check account verification status\n- **Settings**: View user preferences and settings\n\n## Authentication\nRequires valid authentication token.\n\n## Response\n- **200 OK**: Profile retrieved successfully\n- **401 Unauthorized**: Invalid or expired token\n\n## Example Response\n```json\n{\n    \"id\": 1,\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"description\": \"Professional service provider\",\n    \"photo_url\": \"https://example.com/profile.jpg\",\n    \"phone_number\": \"+1234567890\",\n    \"address\": \"123 Main St, City, State\",\n    \"is_verified\": true,\n    \"created_at\": \"2024-01-01T00:00:00Z\",\n    \"updated_at\": \"2024-01-15T10:30:00Z\"\n}\n```\n\n## Use Cases\n- Display user profile in app\n- Check verification status\n- Show account information\n- Validate user data"
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"description\": \"Professional service provider\",\n    \"photo_url\": \"https://example.com/photo.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/profile/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "profile", ""]
						},
						"description": "Update user profile information"
					},
					"response": []
				},
				{
					"name": "Upload Profile Image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "photo",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/profile/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "profile", ""]
						},
						"description": "Upload profile image"
					},
					"response": []
				},
				{
					"name": "Get Advanced Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users/profile/advanced/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "users", "profile", "advanced", ""]
						},
						"description": "Get combined user account and job portal profile"
					},
					"response": []
				}
			],
			"description": "User profile management endpoints"
		},
		{
			"name": "üë• Client Profile Setup",
			"item": [
				{
					"name": "Create Client Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"preferred_services\": [1, 2, 3]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/client/create/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "users", "client", "create", ""]
						},
						"description": "Create client profile for job portal"
					},
					"response": []
				},
				{
					"name": "Update Client Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"preferred_services\": [1, 2, 3, 4]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/client/update/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "users", "client", "update", ""]
						},
						"description": "Update client profile preferences"
					},
					"response": []
				},
				{
					"name": "Get Client Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users/client/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "users", "client", ""]
						},
						"description": "Get current user's client profile"
					},
					"response": []
				}
			],
			"description": "Client profile setup and management"
		},
		{
			"name": "üîß Service Provider Setup",
			"item": [
				{
					"name": "Create Service Provider Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"business_name\": \"Professional Services Co.\",\n    \"business_description\": \"Professional service provider with years of experience\",\n    \"service_areas\": [1, 2],\n    \"services_offered\": [1, 2, 3],\n    \"works_remotely\": true,\n    \"accepts_clients_at_location\": true,\n    \"travels_to_clients\": true,\n    \"is_available\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/provider/create/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "users", "provider", "create", ""]
						},
						"description": "Create service provider profile"
					},
					"response": []
				},
				{
					"name": "Update Service Provider Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"business_name\": \"Updated Business Name\",\n    \"business_description\": \"Updated description\",\n    \"service_areas\": [1, 2, 3],\n    \"services_offered\": [1, 2, 3, 4],\n    \"works_remotely\": false,\n    \"accepts_clients_at_location\": true,\n    \"travels_to_clients\": false,\n    \"is_available\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/provider/update/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "users", "provider", "update", ""]
						},
						"description": "Update service provider profile"
					},
					"response": []
				},
				{
					"name": "Get Service Provider Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users/provider/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "users", "provider", ""]
						},
						"description": "Get current user's service provider profile"
					},
					"response": []
				}
			],
			"description": "Service provider profile setup and management"
		},
		{
			"name": "üìã Core System Data",
			"item": [
				{
					"name": "Get Languages",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/core/languages/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "core", "languages", ""]
						},
						"description": "Get supported languages"
					},
					"response": []
				},
				{
					"name": "Get Service Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/core/service-categories/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "core", "service-categories", ""]
						},
						"description": "Get main service categories"
					},
					"response": []
				},
				{
					"name": "Get Service Subcategories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/core/service-subcategories/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "core", "service-subcategories", ""]
						},
						"description": "Get detailed service subcategories"
					},
					"response": []
				},
				{
					"name": "Get Service Areas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/core/service-areas/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "core", "service-areas", ""]
						},
						"description": "Get geographic service areas"
					},
					"response": []
				},
				{
					"name": "Get System Settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/core/system-settings/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "core", "system-settings", ""]
						},
						"description": "Get system-wide configuration"
					},
					"response": []
				},
				{
					"name": "Get App Versions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/core/app-versions/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "core", "app-versions", ""]
						},
						"description": "Get mobile app version information"
					},
					"response": []
				},
				{
					"name": "Get Support FAQ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/core/support/faq/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "core", "support", "faq", ""]
						},
						"description": "Get support FAQ items"
					},
					"response": []
				}
			],
			"description": "Core system data endpoints"
		},
		{
			"name": "üìù Order Management (Client)",
			"description": "# Order Management (Client)\n\nThis folder contains endpoints for clients to manage their service orders.\n\n## Purpose\n- **Order Creation**: Create new service orders\n- **Order Management**: View, update, and track orders\n- **Bid Monitoring**: Monitor bids on your orders\n- **Order Lifecycle**: Manage order from creation to completion\n\n## Order Flow\n1. **Create Order**: Submit new service request\n2. **Monitor Bids**: Review bids from providers\n3. **Accept Bid**: Select preferred provider\n4. **Track Progress**: Monitor order completion\n5. **Complete Order**: Mark order as completed\n\n## Order Statuses\n- `draft`: Order being prepared\n- `published`: Order visible to providers\n- `bidding`: Accepting bids\n- `assigned`: Provider selected\n- `in_progress`: Service in progress\n- `completed`: Service finished\n- `cancelled`: Order cancelled\n- `disputed`: Order disputed\n\n## Required Fields\n- `service_subcategory`: Type of service\n- `title`: Order title\n- `description`: Detailed description\n- `location`: Service location\n- `city`, `state`, `country`, `postal_code`: Address\n- `urgency`: Priority level\n\n## Optional Fields\n- `service_date`: Preferred date\n- `service_time`: Preferred time\n- `budget_min`, `budget_max`: Budget range\n- `special_requirements`: Additional requirements",
			"item": [
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_subcategory\": 1,\n    \"title\": \"House Cleaning Service\",\n    \"description\": \"Need professional house cleaning service for 3-bedroom apartment\",\n    \"location\": \"123 Main St, City Center\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"country\": \"USA\",\n    \"postal_code\": \"10001\",\n    \"service_date\": \"2024-01-15\",\n    \"service_time\": \"10:00:00\",\n    \"urgency\": \"medium\",\n    \"budget_min\": \"100.00\",\n    \"budget_max\": \"200.00\",\n    \"special_requirements\": \"Pet-friendly cleaning products only\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders/create/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", "create", ""]
						},
						"description": "# Create Order\n\nCreate a new service order for providers to bid on.\n\n## Purpose\n- **Service Request**: Submit service requirements\n- **Provider Matching**: Allow providers to find and bid\n- **Order Tracking**: Start order lifecycle\n\n## Authentication\nRequires valid authentication token and client profile.\n\n## Required Fields\n- `service_subcategory`: ID of service type (get from core endpoints)\n- `title`: Brief order title (max 200 chars)\n- `description`: Detailed service description\n- `location`: Service address\n- `city`, `state`, `country`, `postal_code`: Complete address\n- `urgency`: Priority level (`low`, `medium`, `high`, `urgent`)\n\n## Optional Fields\n- `service_date`: Preferred service date (YYYY-MM-DD)\n- `service_time`: Preferred service time (HH:MM:SS)\n- `budget_min`, `budget_max`: Budget range (decimal)\n- `special_requirements`: Additional requirements\n\n## Response\n- **201 Created**: Order created successfully\n- **400 Bad Request**: Invalid data or missing required fields\n- **401 Unauthorized**: Authentication required\n- **403 Forbidden**: Client profile required\n\n## Example Response\n```json\n{\n    \"id\": 123,\n    \"title\": \"House Cleaning Service\",\n    \"status\": \"published\",\n    \"client\": 1,\n    \"service_subcategory\": 1,\n    \"created_at\": \"2024-01-15T10:30:00Z\",\n    \"published_at\": \"2024-01-15T10:30:00Z\"\n}\n```\n\n## Next Steps\n1. Order becomes visible to providers\n2. Providers can submit bids\n3. Monitor bids using 'Get Order Bids' endpoint\n4. Accept preferred bid when ready"
					},
					"response": []
				},
				{
					"name": "Get My Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/my/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", "my", ""]
						},
						"description": "Get current user's orders (as client)"
					},
					"response": []
				},
				{
					"name": "Get Order Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/{{order_id}}/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", "{{order_id}}", ""]
						},
						"description": "Get specific order details"
					},
					"response": []
				},
				{
					"name": "Update Order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated House Cleaning Service\",\n    \"description\": \"Updated description\",\n    \"location\": \"123 Updated St, City Center\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"country\": \"USA\",\n    \"postal_code\": \"10001\",\n    \"service_date\": \"2024-01-20\",\n    \"service_time\": \"14:00:00\",\n    \"urgency\": \"high\",\n    \"budget_min\": \"150.00\",\n    \"budget_max\": \"250.00\",\n    \"special_requirements\": \"Updated requirements\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders/{{order_id}}/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", "{{order_id}}", ""]
						},
						"description": "Update order details"
					},
					"response": []
				},
				{
					"name": "Get Order Bids",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/my-orders/bids/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", "my-orders", "bids", ""]
						},
						"description": "Get bids on user's orders"
					},
					"response": []
				}
			],
			"description": "Order management for clients"
		},
		{
			"name": "üí∞ Bidding System (Provider)",
			"description": "# Bidding System (Provider)\n\nThis folder contains endpoints for service providers to manage bids and find work.\n\n## Purpose\n- **Order Discovery**: Find available service orders\n- **Bid Management**: Submit, track, and manage bids\n- **Competition**: Compete with other providers\n- **Work Acquisition**: Secure service contracts\n\n## Provider Flow\n1. **Browse Orders**: Find suitable service orders\n2. **Submit Bid**: Propose service terms and pricing\n3. **Track Bids**: Monitor bid status and responses\n4. **Accept Assignment**: Get assigned to accepted orders\n5. **Complete Service**: Deliver service and get paid\n\n## Bid Statuses\n- `pending`: Bid submitted, awaiting client review\n- `accepted`: Client accepted the bid\n- `rejected`: Client rejected the bid\n- `withdrawn`: Provider withdrew the bid\n- `expired`: Bid expired (order closed)\n\n## Bid Components\n- `amount`: Proposed service price\n- `description`: Service approach and details\n- `estimated_duration`: Expected completion time\n- `terms_conditions`: Service terms\n- `is_negotiable`: Whether price is negotiable\n\n## Best Practices\n- **Competitive Pricing**: Research market rates\n- **Detailed Descriptions**: Explain your approach\n- **Realistic Timelines**: Provide accurate duration estimates\n- **Professional Terms**: Use clear, professional language\n- **Quick Response**: Submit bids promptly for better chances\n\n## Bid Limits\n- One bid per provider per order\n- Can withdraw bid before client decision\n- Cannot modify bid after submission\n- Bid expires when order closes",
			"item": [
				{
					"name": "Get Available Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", ""]
						},
						"description": "Get all available orders (admin/provider view)"
					},
					"response": []
				},
				{
					"name": "Create Bid",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": \"150.00\",\n    \"description\": \"Professional cleaning service with eco-friendly products\",\n    \"estimated_duration\": 4,\n    \"terms_conditions\": \"Standard terms apply\",\n    \"is_negotiable\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders/{{order_id}}/bids/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", "{{order_id}}", "bids", ""]
						},
						"description": "# Create Bid\n\nSubmit a bid for a specific service order.\n\n## Purpose\n- **Service Proposal**: Propose your service terms\n- **Competition**: Compete with other providers\n- **Contract Opportunity**: Secure service contracts\n\n## Authentication\nRequires valid authentication token and service provider profile.\n\n## Required Fields\n- `amount`: Proposed service price (decimal, e.g., \"150.00\")\n- `description`: Detailed service description and approach\n\n## Optional Fields\n- `estimated_duration`: Expected completion time in hours\n- `terms_conditions`: Service terms and conditions\n- `is_negotiable`: Whether price is negotiable (boolean)\n\n## Bid Guidelines\n- **Competitive Pricing**: Research market rates\n- **Clear Description**: Explain your service approach\n- **Realistic Timeline**: Provide accurate duration estimates\n- **Professional Terms**: Use clear, professional language\n\n## Response\n- **201 Created**: Bid submitted successfully\n- **400 Bad Request**: Invalid data or missing required fields\n- **401 Unauthorized**: Authentication required\n- **403 Forbidden**: Service provider profile required\n- **404 Not Found**: Order not found or not available\n- **409 Conflict**: Bid already exists for this order\n\n## Example Response\n```json\n{\n    \"id\": 456,\n    \"order\": 123,\n    \"provider\": 1,\n    \"amount\": \"150.00\",\n    \"description\": \"Professional cleaning service with eco-friendly products\",\n    \"estimated_duration\": 4,\n    \"status\": \"pending\",\n    \"is_negotiable\": true,\n    \"created_at\": \"2024-01-15T10:30:00Z\"\n}\n```\n\n## Next Steps\n1. Client will review your bid\n2. Monitor bid status using 'Get My Bids'\n3. If accepted, you'll be assigned to the order\n4. If rejected, you can bid on other orders"
					},
					"response": []
				},
				{
					"name": "Get My Bids",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/orders/my-bids/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", "my-bids", ""]
						},
						"description": "Get current user's bids"
					},
					"response": []
				},
				{
					"name": "Accept Bid (Client)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"Best offer received\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders/bids/{{bid_id}}/accept/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", "bids", "{{bid_id}}", "accept", ""]
						},
						"description": "Accept a bid and create order assignment"
					},
					"response": []
				},
				{
					"name": "Reject Bid (Client)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"Price too high\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders/bids/{{bid_id}}/reject/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", "bids", "{{bid_id}}", "reject", ""]
						},
						"description": "Reject a bid"
					},
					"response": []
				},
				{
					"name": "Withdraw Bid (Provider)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"No longer available\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/orders/bids/{{bid_id}}/withdraw/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "orders", "bids", "{{bid_id}}", "withdraw", ""]
						},
						"description": "Withdraw a bid (by provider)"
					},
					"response": []
				}
			],
			"description": "Bidding system for service providers"
		},
		{
			"name": "üí¨ Chat & Communication",
			"item": [
				{
					"name": "Get Chat Conversations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/chat/conversations/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "chat", "conversations", ""]
						},
						"description": "Get user's chat conversations"
					},
					"response": []
				},
				{
					"name": "Get Conversation Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/chat/conversations/{{conversation_id}}/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "chat", "conversations", "{{conversation_id}}", ""]
						},
						"description": "Get conversation details with messages"
					},
					"response": []
				},
				{
					"name": "Send Message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"Hello! When can you start the cleaning service?\",\n    \"message_type\": \"text\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/chat/conversations/{{conversation_id}}/send/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "chat", "conversations", "{{conversation_id}}", "send", ""]
						},
						"description": "Send a message to a chat room"
					},
					"response": []
				},
				{
					"name": "Get WebSocket Info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/chat/websocket-info/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "chat", "websocket-info", ""]
						},
						"description": "Get WebSocket connection info for real-time chat"
					},
					"response": []
				}
			],
			"description": "Chat and communication features"
		},
		{
			"name": "üîî Notifications",
			"item": [
				{
					"name": "Get Notifications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "notifications", ""]
						},
						"description": "Get user notifications"
					},
					"response": []
				},
				{
					"name": "Get Unread Notifications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/unread/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "notifications", "unread", ""]
						},
						"description": "Get unread notifications"
					},
					"response": []
				},
				{
					"name": "Get Notification Count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/count/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "notifications", "count", ""]
						},
						"description": "Get notification counts"
					},
					"response": []
				},
				{
					"name": "Mark All Notifications as Read",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/mark-all-read/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "notifications", "mark-all-read", ""]
						},
						"description": "Mark all notifications as read"
					},
					"response": []
				},
				{
					"name": "Get Recent Notifications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/recent/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "notifications", "recent", ""]
						},
						"description": "Get recent notifications (last 7 days)"
					},
					"response": []
				}
			],
			"description": "Notification management"
		},
		{
			"name": "üí≥ Payment System",
			"description": "# Payment System\n\nThis folder contains endpoints for managing payments, payment methods, and billing.\n\n## Purpose\n- **Payment Methods**: Manage credit cards, bank accounts, digital wallets\n- **Payment Processing**: Process payments for services\n- **Invoice Management**: Generate and track invoices\n- **Billing History**: View payment history and transactions\n\n## Payment Flow\n1. **Add Payment Method**: Set up credit card or bank account\n2. **Service Completion**: Provider completes service\n3. **Invoice Generation**: System generates invoice\n4. **Payment Processing**: Client pays invoice\n5. **Fund Distribution**: Provider receives payment\n\n## Payment Methods\n- `credit_card`: Credit card payments\n- `debit_card`: Debit card payments\n- `bank_transfer`: Direct bank transfers\n- `digital_wallet`: Digital wallet payments (PayPal, etc.)\n\n## Payment Statuses\n- `pending`: Payment initiated\n- `processing`: Payment being processed\n- `completed`: Payment successful\n- `failed`: Payment failed\n- `cancelled`: Payment cancelled\n- `refunded`: Payment refunded\n\n## Security Features\n- **Tokenization**: Card details are tokenized\n- **PCI Compliance**: Secure payment processing\n- **Fraud Protection**: Built-in fraud detection\n- **Encryption**: All payment data encrypted\n\n## Supported Currencies\n- USD (default)\n- EUR\n- GBP\n- CAD\n- AUD\n\n## Payment Limits\n- Minimum: $1.00\n- Maximum: $10,000.00\n- Daily limit: $50,000.00\n- Monthly limit: $500,000.00",
			"item": [
				{
					"name": "Get Payment Methods",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/payments/methods/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "payments", "methods", ""]
						},
						"description": "Get user's payment methods"
					},
					"response": []
				},
				{
					"name": "Add Payment Method",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method_type\": \"credit_card\",\n    \"card_last4\": \"4242\",\n    \"card_brand\": \"visa\",\n    \"card_exp_month\": 12,\n    \"card_exp_year\": 2025\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/payments/methods/create/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "payments", "methods", "create", ""]
						},
						"description": "Add a new payment method"
					},
					"response": []
				},
				{
					"name": "Get Payments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/payments/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "payments", ""]
						},
						"description": "Get user's payment history"
					},
					"response": []
				},
				{
					"name": "Create Payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"invoice\": 1,\n    \"amount\": \"150.00\",\n    \"currency\": \"USD\",\n    \"payment_method\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/payments/create/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "payments", "create", ""]
						},
						"description": "Create a new payment"
					},
					"response": []
				},
				{
					"name": "Get Invoices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/payments/invoices/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "payments", "invoices", ""]
						},
						"description": "Get user's invoices"
					},
					"response": []
				}
			],
			"description": "Payment and billing system"
		},
		{
			"name": "‚≠ê Reviews & Ratings",
			"item": [
				{
					"name": "Create Review",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order\": 1,\n    \"provider\": 1,\n    \"overall_rating\": 5,\n    \"title\": \"Excellent Service!\",\n    \"comment\": \"The cleaning service was outstanding. Very professional and thorough.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/reviews/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "reviews", ""]
						},
						"description": "Create a review for completed service"
					},
					"response": []
				},
				{
					"name": "Get Reviews",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/reviews/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "reviews", ""]
						},
						"description": "Get all reviews"
					},
					"response": []
				},
				{
					"name": "Get Provider Reviews",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/reviews/provider/{{provider_id}}/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "reviews", "provider", "{{provider_id}}", ""]
						},
						"description": "Get reviews for a specific provider"
					},
					"response": []
				},
				{
					"name": "Get Review Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/reviews/analytics/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "reviews", "analytics", ""]
						},
						"description": "Get review analytics"
					},
					"response": []
				}
			],
			"description": "Review and rating system"
		},
		{
			"name": "üîç Search & Discovery",
			"item": [
				{
					"name": "Global Search",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/search/global/?q={{search_query}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "search", "global", ""],
							"query": [
								{
									"key": "q",
									"value": "{{search_query}}"
								}
							]
						},
						"description": "Global search across all content"
					},
					"response": []
				},
				{
					"name": "Search Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/search/orders/?q={{search_query}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "search", "orders", ""],
							"query": [
								{
									"key": "q",
									"value": "{{search_query}}"
								}
							]
						},
						"description": "Search specifically for orders"
					},
					"response": []
				},
				{
					"name": "Search Providers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/search/providers/?q={{search_query}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "search", "providers", ""],
							"query": [
								{
									"key": "q",
									"value": "{{search_query}}"
								}
							]
						},
						"description": "Search specifically for service providers"
					},
					"response": []
				},
				{
					"name": "Get Featured Providers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/providers/featured/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "users", "providers", "featured", ""]
						},
						"description": "Get featured service providers"
					},
					"response": []
				},
				{
					"name": "Get All Providers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/providers/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "users", "providers", ""]
						},
						"description": "Get all available service providers"
					},
					"response": []
				}
			],
			"description": "Search and discovery features"
		},
		{
			"name": "üìä Analytics & Dashboard",
			"item": [
				{
					"name": "Get Dashboard Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/analytics/dashboard/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "analytics", "dashboard", ""]
						},
						"description": "Get dashboard overview data"
					},
					"response": []
				},
				{
					"name": "Get Task History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/users/task-history/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "users", "task-history", ""]
						},
						"description": "Get user's task history (orders created or worked on)"
					},
					"response": []
				}
			],
			"description": "Analytics and dashboard features"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "firebase_id_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "order_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "bid_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "conversation_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "provider_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "search_query",
			"value": "cleaning",
			"type": "string"
		}
	]
}
