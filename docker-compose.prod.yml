version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres
    container_name: kg_job_portal_postgres
    restart: unless-stopped
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis
    container_name: kg_job_portal_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend
  backend:
    image: ${REGISTRY_USER}/kg-job-portal-my:latest
    container_name: kg_job_portal_backend
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    # restart: unless-stopped
    env_file:
      - .env.prod
    ports:
      - "8000:8000"
    volumes:
      - media_files:/app/mediafiles
      - static_files:/app/staticfiles
      - logs:/app/logs
    depends_on:
      - db
      - redis

  # Nginx Reverse Proxy
  # nginx:
  #   image: ${REGISTRY_USER}/kg-job-portal-my-nginx:latest
  #   container_name: kg_job_portal_nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - static_files:/var/www/staticfiles:ro
  #     - media_files:/var/www/mediafiles:ro
  #     - nginx_logs:/var/log/nginx
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     backend:
  #       condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  media_files:
  static_files:
  logs:
  nginx_logs:
