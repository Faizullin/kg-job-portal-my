# Copy this content to a .env file in the root directory
# This configuration works with your current Docker Compose setup

# Django Configuration
DJANGO_ENV=dev
SECRET_KEY=django-insecure-3b!7h8__f5e2frki-d&*)gb5y@--&*e&#oh=41y)cq%jwh$g5c
DEBUG=1
DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 0.0.0.0
DJANGO_CSRF_TRUSTED_ORIGINS=http://localhost http://127.0.0.1:8000 http://localhost:3000

# Docker Configuration
RUNNING_FROM_DOCKER=1
USE_NGINX=0

# Database Configuration (PostgreSQL)
# Using service name 'db' from docker-compose.yml
POSTGRES_DB=lms_db
POSTGRES_USER=lms_user
POSTGRES_PASSWORD=lms_password_123
POSTGRES_HOST=db
POSTGRES_PORT=5432

# Redis Configuration
# Using service name 'redis' from docker-compose.yml
REDIS_HOST=redis
REDIS_PORT=6379

# Email Configuration (Gmail SMTP)
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password
EMAIL_SERVER_SECRET=your-email-server-secret

# Firebase Configuration
FIREBASE_CREDENTIALS_PATH=config/firebase/service_account.json

# Optional Configuration
NGINX_HOST=localhost
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USE_TLS=True
SMS_API_KEY=your-sms-api-key
SMS_API_SECRET=your-sms-api-secret
LOG_LEVEL=INFO
LOG_FILE=./logs.log

# Container Names (for reference - these are set in docker-compose.yml)
# kg-job-portal-my-db
# kg-job-portal-my-redis  
# kg-job-portal-my-backend

# Network Names (for reference - these are set in docker-compose.yml)
# kg-job-portal-my-back
# kg-job-portal-my-front
